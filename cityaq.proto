syntax = "proto3";

package cityaqrpc;

service CityAQ {
  // Cities returns the available cities.
  rpc Cities(CitiesRequest) returns (CitiesResponse) {}

  // CityGeometry returns the boundary of the specified city.
  rpc CityGeometry(CityGeometryRequest) returns (CityGeometryResponse) {}

  // GriddedEmissions returns the distribution within the city of
  // 1 kilotonne of emissions.
  rpc GriddedEmissions(GriddedEmissionsRequest) returns (GriddedEmissionsResponse) {}

  // EmissionsGridBounds returns the bounds of the grid used in GriddedEmissions.
  rpc EmissionsGridBounds(EmissionsGridBoundsRequest) returns (EmissionsGridBoundsResponse) {}

  // GriddedConcentrations returns the concentrations resulting from the
  // corresponding GriddedEmissions.
  rpc GriddedConcentrations(GriddedConcentrationsRequest) returns (GriddedConcentrationsResponse) {}

  // MapScale returns the minimum and maximum values of the result
  // of the given request.
  rpc MapScale(MapScaleRequest) returns (MapScaleResponse) {}

  // GriddedPopulation returns the population counts---gridded to the
  // concentration grid---associated with the given request.
  rpc GriddedPopulation(GriddedPopulationRequest) returns (GriddedPopulationResponse) {}

  // ImpactSummary returns a summary of the impacts from the given request.
  rpc ImpactSummary(ImpactSummaryRequest) returns (ImpactSummaryResponse) {}
}

message CitiesRequest {
}

message CitiesResponse {
  // The names of the cities
  repeated string Names = 1;
}

message CityGeometryRequest {
  string CityName = 1;
}

message CityGeometryResponse {
  repeated Polygon Polygons = 1;
}

message Polygon {
  repeated Path Paths = 1;
}

message Path {
  repeated Point Points = 1;
}

message Point {
  double X = 1;
  double Y = 2;
}

message GriddedEmissionsRequest {
  string CityName = 1;
  string SourceType = 2;
  Emission Emission = 3;
}

message GriddedEmissionsResponse {
  repeated Polygon Polygons = 1;
  repeated double Emissions = 2;
}

message GriddedConcentrationsRequest {
  string CityName = 1;
  string SourceType = 2;
  Emission Emission = 3;
}

message GriddedConcentrationsResponse {
  repeated Polygon Polygons = 1;
  repeated double Concentrations = 2;
}

message GriddedPopulationRequest {
  string CityName = 1;
  string SourceType = 2;
  Emission Emission = 3;
}

message GriddedPopulationResponse {
  repeated Polygon Polygons = 1;
  repeated double Population = 2;
}

message ImpactSummaryRequest {
  string CityName = 1;
  string SourceType = 2;
  Emission Emission = 3;
}

message ImpactSummaryResponse {
  // Population is the total population.
  double Population = 1;

  // CityPopulation is the total population in the city.
  double CityPopulation = 2;

  // CityExposure is the population-weighted average
  // concentration in the city.
  double CityExposure = 3;

  // TotalExposure is the overall population-weighted average
  // concentration.
  double TotalExposure = 4;

  // CityIF is the intake fraction in the city.
  double CityIF = 5;

  // TotalIF is the total intake fraction.
  double TotalIF = 6;
}

message EmissionsGridBoundsRequest {
  string CityName = 1;
  string SourceType = 2;
}

message EmissionsGridBoundsResponse {
  Point Min = 1;
  Point Max = 2;
}

enum Emission {
  UNKNOWN_EMISSION = 0;
  PM2_5 = 1;
  NH3 = 2;
  NOx = 3;
  SOx = 4;
  VOC = 5;
}

enum ImpactType {
  UNKNOWN_IMPACTTYPE = 0;
  Emissions = 1;
  Concentrations = 2;
}

message MapScaleRequest {
  string CityName = 1;
  ImpactType ImpactType = 2;
  Emission Emission = 3;
  string SourceType = 4;
}

message MapScaleResponse {
  double Min = 1;
  double Max = 2;
  double CutPt = 3;
}
