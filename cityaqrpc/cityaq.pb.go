// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cityaq.proto

package cityaqrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MapType int32

const (
	MapType_UNKNOWN   MapType = 0
	MapType_EMISSIONS MapType = 1
)

var MapType_name = map[int32]string{
	0: "UNKNOWN",
	1: "EMISSIONS",
}

var MapType_value = map[string]int32{
	"UNKNOWN":   0,
	"EMISSIONS": 1,
}

func (x MapType) String() string {
	return proto.EnumName(MapType_name, int32(x))
}

func (MapType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{0}
}

type CitiesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CitiesRequest) Reset()         { *m = CitiesRequest{} }
func (m *CitiesRequest) String() string { return proto.CompactTextString(m) }
func (*CitiesRequest) ProtoMessage()    {}
func (*CitiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{0}
}

func (m *CitiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CitiesRequest.Unmarshal(m, b)
}
func (m *CitiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CitiesRequest.Marshal(b, m, deterministic)
}
func (m *CitiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CitiesRequest.Merge(m, src)
}
func (m *CitiesRequest) XXX_Size() int {
	return xxx_messageInfo_CitiesRequest.Size(m)
}
func (m *CitiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CitiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CitiesRequest proto.InternalMessageInfo

type CitiesResponse struct {
	// The names of the cities
	Names []string `protobuf:"bytes,1,rep,name=Names,proto3" json:"Names,omitempty"`
	// Paths to the file containing the geometry of each city.
	Paths                []string `protobuf:"bytes,2,rep,name=Paths,proto3" json:"Paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CitiesResponse) Reset()         { *m = CitiesResponse{} }
func (m *CitiesResponse) String() string { return proto.CompactTextString(m) }
func (*CitiesResponse) ProtoMessage()    {}
func (*CitiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{1}
}

func (m *CitiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CitiesResponse.Unmarshal(m, b)
}
func (m *CitiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CitiesResponse.Marshal(b, m, deterministic)
}
func (m *CitiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CitiesResponse.Merge(m, src)
}
func (m *CitiesResponse) XXX_Size() int {
	return xxx_messageInfo_CitiesResponse.Size(m)
}
func (m *CitiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CitiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CitiesResponse proto.InternalMessageInfo

func (m *CitiesResponse) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *CitiesResponse) GetPaths() []string {
	if m != nil {
		return m.Paths
	}
	return nil
}

type CityGeometryRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CityGeometryRequest) Reset()         { *m = CityGeometryRequest{} }
func (m *CityGeometryRequest) String() string { return proto.CompactTextString(m) }
func (*CityGeometryRequest) ProtoMessage()    {}
func (*CityGeometryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{2}
}

func (m *CityGeometryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CityGeometryRequest.Unmarshal(m, b)
}
func (m *CityGeometryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CityGeometryRequest.Marshal(b, m, deterministic)
}
func (m *CityGeometryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CityGeometryRequest.Merge(m, src)
}
func (m *CityGeometryRequest) XXX_Size() int {
	return xxx_messageInfo_CityGeometryRequest.Size(m)
}
func (m *CityGeometryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CityGeometryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CityGeometryRequest proto.InternalMessageInfo

func (m *CityGeometryRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type CityGeometryResponse struct {
	Polygons             []*Polygon `protobuf:"bytes,1,rep,name=Polygons,proto3" json:"Polygons,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CityGeometryResponse) Reset()         { *m = CityGeometryResponse{} }
func (m *CityGeometryResponse) String() string { return proto.CompactTextString(m) }
func (*CityGeometryResponse) ProtoMessage()    {}
func (*CityGeometryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{3}
}

func (m *CityGeometryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CityGeometryResponse.Unmarshal(m, b)
}
func (m *CityGeometryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CityGeometryResponse.Marshal(b, m, deterministic)
}
func (m *CityGeometryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CityGeometryResponse.Merge(m, src)
}
func (m *CityGeometryResponse) XXX_Size() int {
	return xxx_messageInfo_CityGeometryResponse.Size(m)
}
func (m *CityGeometryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CityGeometryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CityGeometryResponse proto.InternalMessageInfo

func (m *CityGeometryResponse) GetPolygons() []*Polygon {
	if m != nil {
		return m.Polygons
	}
	return nil
}

type Polygon struct {
	Paths                []*Path  `protobuf:"bytes,1,rep,name=Paths,proto3" json:"Paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Polygon) Reset()         { *m = Polygon{} }
func (m *Polygon) String() string { return proto.CompactTextString(m) }
func (*Polygon) ProtoMessage()    {}
func (*Polygon) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{4}
}

func (m *Polygon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Polygon.Unmarshal(m, b)
}
func (m *Polygon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Polygon.Marshal(b, m, deterministic)
}
func (m *Polygon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Polygon.Merge(m, src)
}
func (m *Polygon) XXX_Size() int {
	return xxx_messageInfo_Polygon.Size(m)
}
func (m *Polygon) XXX_DiscardUnknown() {
	xxx_messageInfo_Polygon.DiscardUnknown(m)
}

var xxx_messageInfo_Polygon proto.InternalMessageInfo

func (m *Polygon) GetPaths() []*Path {
	if m != nil {
		return m.Paths
	}
	return nil
}

type Path struct {
	Points               []*Point `protobuf:"bytes,1,rep,name=Points,proto3" json:"Points,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Path) Reset()         { *m = Path{} }
func (m *Path) String() string { return proto.CompactTextString(m) }
func (*Path) ProtoMessage()    {}
func (*Path) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{5}
}

func (m *Path) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Path.Unmarshal(m, b)
}
func (m *Path) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Path.Marshal(b, m, deterministic)
}
func (m *Path) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Path.Merge(m, src)
}
func (m *Path) XXX_Size() int {
	return xxx_messageInfo_Path.Size(m)
}
func (m *Path) XXX_DiscardUnknown() {
	xxx_messageInfo_Path.DiscardUnknown(m)
}

var xxx_messageInfo_Path proto.InternalMessageInfo

func (m *Path) GetPoints() []*Point {
	if m != nil {
		return m.Points
	}
	return nil
}

type Point struct {
	X                    float32  `protobuf:"fixed32,1,opt,name=X,proto3" json:"X,omitempty"`
	Y                    float32  `protobuf:"fixed32,2,opt,name=Y,proto3" json:"Y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Point) Reset()         { *m = Point{} }
func (m *Point) String() string { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()    {}
func (*Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{6}
}

func (m *Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Point.Unmarshal(m, b)
}
func (m *Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Point.Marshal(b, m, deterministic)
}
func (m *Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Point.Merge(m, src)
}
func (m *Point) XXX_Size() int {
	return xxx_messageInfo_Point.Size(m)
}
func (m *Point) XXX_DiscardUnknown() {
	xxx_messageInfo_Point.DiscardUnknown(m)
}

var xxx_messageInfo_Point proto.InternalMessageInfo

func (m *Point) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Point) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type MapGridRequest struct {
	CityName             string   `protobuf:"bytes,1,opt,name=CityName,proto3" json:"CityName,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MapGridRequest) Reset()         { *m = MapGridRequest{} }
func (m *MapGridRequest) String() string { return proto.CompactTextString(m) }
func (*MapGridRequest) ProtoMessage()    {}
func (*MapGridRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{7}
}

func (m *MapGridRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MapGridRequest.Unmarshal(m, b)
}
func (m *MapGridRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MapGridRequest.Marshal(b, m, deterministic)
}
func (m *MapGridRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MapGridRequest.Merge(m, src)
}
func (m *MapGridRequest) XXX_Size() int {
	return xxx_messageInfo_MapGridRequest.Size(m)
}
func (m *MapGridRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MapGridRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MapGridRequest proto.InternalMessageInfo

func (m *MapGridRequest) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

func (m *MapGridRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type MapGridResponse struct {
	Polygons             []*Polygon `protobuf:"bytes,1,rep,name=Polygons,proto3" json:"Polygons,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MapGridResponse) Reset()         { *m = MapGridResponse{} }
func (m *MapGridResponse) String() string { return proto.CompactTextString(m) }
func (*MapGridResponse) ProtoMessage()    {}
func (*MapGridResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{8}
}

func (m *MapGridResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MapGridResponse.Unmarshal(m, b)
}
func (m *MapGridResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MapGridResponse.Marshal(b, m, deterministic)
}
func (m *MapGridResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MapGridResponse.Merge(m, src)
}
func (m *MapGridResponse) XXX_Size() int {
	return xxx_messageInfo_MapGridResponse.Size(m)
}
func (m *MapGridResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MapGridResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MapGridResponse proto.InternalMessageInfo

func (m *MapGridResponse) GetPolygons() []*Polygon {
	if m != nil {
		return m.Polygons
	}
	return nil
}

type GriddedMapDataRequest struct {
	CityName             string   `protobuf:"bytes,1,opt,name=CityName,proto3" json:"CityName,omitempty"`
	MapType              MapType  `protobuf:"varint,2,opt,name=MapType,proto3,enum=cityaqrpc.MapType" json:"MapType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GriddedMapDataRequest) Reset()         { *m = GriddedMapDataRequest{} }
func (m *GriddedMapDataRequest) String() string { return proto.CompactTextString(m) }
func (*GriddedMapDataRequest) ProtoMessage()    {}
func (*GriddedMapDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{9}
}

func (m *GriddedMapDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GriddedMapDataRequest.Unmarshal(m, b)
}
func (m *GriddedMapDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GriddedMapDataRequest.Marshal(b, m, deterministic)
}
func (m *GriddedMapDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GriddedMapDataRequest.Merge(m, src)
}
func (m *GriddedMapDataRequest) XXX_Size() int {
	return xxx_messageInfo_GriddedMapDataRequest.Size(m)
}
func (m *GriddedMapDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GriddedMapDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GriddedMapDataRequest proto.InternalMessageInfo

func (m *GriddedMapDataRequest) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

func (m *GriddedMapDataRequest) GetMapType() MapType {
	if m != nil {
		return m.MapType
	}
	return MapType_UNKNOWN
}

type GriddedMapDataResponse struct {
	RGB                  [][]byte `protobuf:"bytes,1,rep,name=RGB,proto3" json:"RGB,omitempty"`
	Legend               string   `protobuf:"bytes,2,opt,name=Legend,proto3" json:"Legend,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GriddedMapDataResponse) Reset()         { *m = GriddedMapDataResponse{} }
func (m *GriddedMapDataResponse) String() string { return proto.CompactTextString(m) }
func (*GriddedMapDataResponse) ProtoMessage()    {}
func (*GriddedMapDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{10}
}

func (m *GriddedMapDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GriddedMapDataResponse.Unmarshal(m, b)
}
func (m *GriddedMapDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GriddedMapDataResponse.Marshal(b, m, deterministic)
}
func (m *GriddedMapDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GriddedMapDataResponse.Merge(m, src)
}
func (m *GriddedMapDataResponse) XXX_Size() int {
	return xxx_messageInfo_GriddedMapDataResponse.Size(m)
}
func (m *GriddedMapDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GriddedMapDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GriddedMapDataResponse proto.InternalMessageInfo

func (m *GriddedMapDataResponse) GetRGB() [][]byte {
	if m != nil {
		return m.RGB
	}
	return nil
}

func (m *GriddedMapDataResponse) GetLegend() string {
	if m != nil {
		return m.Legend
	}
	return ""
}

func init() {
	proto.RegisterEnum("cityaqrpc.MapType", MapType_name, MapType_value)
	proto.RegisterType((*CitiesRequest)(nil), "cityaqrpc.CitiesRequest")
	proto.RegisterType((*CitiesResponse)(nil), "cityaqrpc.CitiesResponse")
	proto.RegisterType((*CityGeometryRequest)(nil), "cityaqrpc.CityGeometryRequest")
	proto.RegisterType((*CityGeometryResponse)(nil), "cityaqrpc.CityGeometryResponse")
	proto.RegisterType((*Polygon)(nil), "cityaqrpc.Polygon")
	proto.RegisterType((*Path)(nil), "cityaqrpc.Path")
	proto.RegisterType((*Point)(nil), "cityaqrpc.Point")
	proto.RegisterType((*MapGridRequest)(nil), "cityaqrpc.MapGridRequest")
	proto.RegisterType((*MapGridResponse)(nil), "cityaqrpc.MapGridResponse")
	proto.RegisterType((*GriddedMapDataRequest)(nil), "cityaqrpc.GriddedMapDataRequest")
	proto.RegisterType((*GriddedMapDataResponse)(nil), "cityaqrpc.GriddedMapDataResponse")
}

func init() { proto.RegisterFile("cityaq.proto", fileDescriptor_7cccf5bb3409f35d) }

var fileDescriptor_7cccf5bb3409f35d = []byte{
	// 452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x5d, 0x32, 0xd6, 0xae, 0x77, 0x5d, 0x5b, 0x5d, 0xc6, 0x94, 0xe5, 0x01, 0x8a, 0xd1, 0xa4,
	0x82, 0x50, 0x35, 0x8d, 0x57, 0x24, 0x58, 0x07, 0x54, 0x13, 0x24, 0xeb, 0x5c, 0xd0, 0xb6, 0x47,
	0xb3, 0x58, 0x9b, 0x25, 0x96, 0x64, 0x89, 0x79, 0xc8, 0x4f, 0xe3, 0xdf, 0x21, 0x7f, 0xc4, 0x4a,
	0xaa, 0x82, 0x10, 0x6f, 0xf7, 0xf8, 0x1c, 0xdf, 0x7b, 0xee, 0x89, 0x03, 0xfd, 0x1b, 0x21, 0x2b,
	0xf6, 0x30, 0xcd, 0x8b, 0x4c, 0x66, 0xd8, 0x33, 0xa8, 0xc8, 0x6f, 0xc8, 0x10, 0x76, 0x4f, 0x85,
	0x14, 0xbc, 0xa4, 0xfc, 0xe1, 0x27, 0x2f, 0x25, 0x79, 0x0b, 0x83, 0xfa, 0xa0, 0xcc, 0xb3, 0xb4,
	0xe4, 0xb8, 0x07, 0x5b, 0x31, 0xbb, 0xe7, 0x65, 0xe0, 0x8d, 0x37, 0x27, 0x3d, 0x6a, 0x80, 0x3a,
	0x5d, 0x30, 0x79, 0x57, 0x06, 0xbe, 0x39, 0xd5, 0x80, 0xbc, 0x84, 0xc7, 0xa7, 0x42, 0x56, 0x73,
	0x9e, 0xdd, 0x73, 0x59, 0x54, 0xb6, 0x29, 0x22, 0x3c, 0x52, 0x7c, 0xe0, 0x8d, 0xbd, 0x49, 0x8f,
	0xea, 0x9a, 0x7c, 0x82, 0xbd, 0xb6, 0xd4, 0x8e, 0x9b, 0xc2, 0xf6, 0x22, 0xfb, 0x51, 0xdd, 0x66,
	0xa9, 0x99, 0xb8, 0x73, 0x8c, 0x53, 0xe7, 0x77, 0x6a, 0x29, 0xea, 0x34, 0xe4, 0x08, 0xba, 0xb6,
	0xc6, 0xc3, 0xda, 0x93, 0xb9, 0x37, 0x6c, 0xde, 0x63, 0xf2, 0xae, 0x36, 0x79, 0x64, 0xdc, 0xe0,
	0x04, 0x3a, 0x8b, 0x4c, 0xa4, 0xb2, 0xd6, 0x8f, 0x5a, 0x73, 0x44, 0x2a, 0xa9, 0xe5, 0xc9, 0x0b,
	0xd8, 0xd2, 0x15, 0xf6, 0xc1, 0xbb, 0xd2, 0x5b, 0xf8, 0xd4, 0xbb, 0x52, 0xe8, 0x3a, 0xf0, 0x0d,
	0xba, 0x26, 0xef, 0x61, 0x10, 0xb1, 0x7c, 0x5e, 0x88, 0xa4, 0x5e, 0x3b, 0x84, 0x6d, 0xb5, 0xa2,
	0x0a, 0xcc, 0xae, 0xee, 0xb0, 0x8b, 0xc4, 0x6f, 0x44, 0x72, 0x02, 0x43, 0xd7, 0xe1, 0x3f, 0xd3,
	0x60, 0xf0, 0x44, 0xdd, 0x4f, 0x78, 0x12, 0xb1, 0xfc, 0x03, 0x93, 0xec, 0x5f, 0xbc, 0xbc, 0x86,
	0x6e, 0xc4, 0xf2, 0xaf, 0x55, 0xce, 0xb5, 0x9d, 0x41, 0x6b, 0x86, 0x65, 0x68, 0x2d, 0x21, 0x33,
	0xd8, 0x5f, 0x1d, 0x61, 0xcd, 0x8e, 0x60, 0x93, 0xce, 0x67, 0xda, 0x67, 0x9f, 0xaa, 0x12, 0xf7,
	0xa1, 0xf3, 0x85, 0xdf, 0xf2, 0x34, 0xb1, 0x7b, 0x5a, 0xf4, 0xea, 0xd0, 0x4d, 0xc4, 0x1d, 0xe8,
	0x7e, 0x8b, 0x3f, 0xc7, 0xe7, 0x97, 0xf1, 0x68, 0x03, 0x77, 0xa1, 0xf7, 0x31, 0x3a, 0x5b, 0x2e,
	0xcf, 0xce, 0xe3, 0xe5, 0xc8, 0x3b, 0xfe, 0xe5, 0x43, 0x47, 0xb9, 0x3c, 0xb9, 0xc0, 0x77, 0xba,
	0x12, 0xbc, 0xc4, 0xa0, 0x61, 0xae, 0xf5, 0x76, 0xc3, 0x83, 0x35, 0x8c, 0xb1, 0x46, 0x36, 0xf0,
	0x02, 0xfa, 0xcd, 0xf7, 0x86, 0x4f, 0xdb, 0xe2, 0xd5, 0x37, 0x1b, 0x3e, 0xfb, 0x23, 0xef, 0x5a,
	0xce, 0xf4, 0x16, 0x2a, 0x0c, 0x3c, 0x68, 0x27, 0xd6, 0x78, 0x05, 0x61, 0xb8, 0x8e, 0x72, 0x3d,
	0x2e, 0x61, 0xd0, 0x4e, 0x13, 0xc7, 0x0d, 0xfd, 0xda, 0x6f, 0x19, 0x3e, 0xff, 0x8b, 0xa2, 0x6e,
	0xfc, 0xbd, 0xa3, 0xff, 0xf5, 0x37, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xc3, 0x1c, 0x86, 0xa7,
	0xfb, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CityAQClient is the client API for CityAQ service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CityAQClient interface {
	Cities(ctx context.Context, in *CitiesRequest, opts ...grpc.CallOption) (*CitiesResponse, error)
	CityGeometry(ctx context.Context, in *CityGeometryRequest, opts ...grpc.CallOption) (*CityGeometryResponse, error)
	MapGrid(ctx context.Context, in *MapGridRequest, opts ...grpc.CallOption) (*MapGridResponse, error)
	GriddedMapData(ctx context.Context, in *GriddedMapDataRequest, opts ...grpc.CallOption) (*GriddedMapDataResponse, error)
}

type cityAQClient struct {
	cc *grpc.ClientConn
}

func NewCityAQClient(cc *grpc.ClientConn) CityAQClient {
	return &cityAQClient{cc}
}

func (c *cityAQClient) Cities(ctx context.Context, in *CitiesRequest, opts ...grpc.CallOption) (*CitiesResponse, error) {
	out := new(CitiesResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/Cities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) CityGeometry(ctx context.Context, in *CityGeometryRequest, opts ...grpc.CallOption) (*CityGeometryResponse, error) {
	out := new(CityGeometryResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/CityGeometry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) MapGrid(ctx context.Context, in *MapGridRequest, opts ...grpc.CallOption) (*MapGridResponse, error) {
	out := new(MapGridResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/MapGrid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) GriddedMapData(ctx context.Context, in *GriddedMapDataRequest, opts ...grpc.CallOption) (*GriddedMapDataResponse, error) {
	out := new(GriddedMapDataResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/GriddedMapData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CityAQServer is the server API for CityAQ service.
type CityAQServer interface {
	Cities(context.Context, *CitiesRequest) (*CitiesResponse, error)
	CityGeometry(context.Context, *CityGeometryRequest) (*CityGeometryResponse, error)
	MapGrid(context.Context, *MapGridRequest) (*MapGridResponse, error)
	GriddedMapData(context.Context, *GriddedMapDataRequest) (*GriddedMapDataResponse, error)
}

// UnimplementedCityAQServer can be embedded to have forward compatible implementations.
type UnimplementedCityAQServer struct {
}

func (*UnimplementedCityAQServer) Cities(ctx context.Context, req *CitiesRequest) (*CitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Cities not implemented")
}
func (*UnimplementedCityAQServer) CityGeometry(ctx context.Context, req *CityGeometryRequest) (*CityGeometryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CityGeometry not implemented")
}
func (*UnimplementedCityAQServer) MapGrid(ctx context.Context, req *MapGridRequest) (*MapGridResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MapGrid not implemented")
}
func (*UnimplementedCityAQServer) GriddedMapData(ctx context.Context, req *GriddedMapDataRequest) (*GriddedMapDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GriddedMapData not implemented")
}

func RegisterCityAQServer(s *grpc.Server, srv CityAQServer) {
	s.RegisterService(&_CityAQ_serviceDesc, srv)
}

func _CityAQ_Cities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).Cities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/Cities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).Cities(ctx, req.(*CitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_CityGeometry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CityGeometryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).CityGeometry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/CityGeometry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).CityGeometry(ctx, req.(*CityGeometryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_MapGrid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MapGridRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).MapGrid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/MapGrid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).MapGrid(ctx, req.(*MapGridRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_GriddedMapData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GriddedMapDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).GriddedMapData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/GriddedMapData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).GriddedMapData(ctx, req.(*GriddedMapDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CityAQ_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cityaqrpc.CityAQ",
	HandlerType: (*CityAQServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Cities",
			Handler:    _CityAQ_Cities_Handler,
		},
		{
			MethodName: "CityGeometry",
			Handler:    _CityAQ_CityGeometry_Handler,
		},
		{
			MethodName: "MapGrid",
			Handler:    _CityAQ_MapGrid_Handler,
		},
		{
			MethodName: "GriddedMapData",
			Handler:    _CityAQ_GriddedMapData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cityaq.proto",
}
