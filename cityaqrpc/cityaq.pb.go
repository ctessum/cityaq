// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cityaq.proto

//+build !js

package cityaqrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Emission int32

const (
	Emission_UNKNOWN_EMISSION Emission = 0
	Emission_PM2_5            Emission = 1
	Emission_NH3              Emission = 2
	Emission_NOx              Emission = 3
	Emission_SOx              Emission = 4
	Emission_VOC              Emission = 5
)

var Emission_name = map[int32]string{
	0: "UNKNOWN_EMISSION",
	1: "PM2_5",
	2: "NH3",
	3: "NOx",
	4: "SOx",
	5: "VOC",
}

var Emission_value = map[string]int32{
	"UNKNOWN_EMISSION": 0,
	"PM2_5":            1,
	"NH3":              2,
	"NOx":              3,
	"SOx":              4,
	"VOC":              5,
}

func (x Emission) String() string {
	return proto.EnumName(Emission_name, int32(x))
}

func (Emission) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{0}
}

type ImpactType int32

const (
	ImpactType_UNKNOWN_IMPACTTYPE ImpactType = 0
	ImpactType_Emissions          ImpactType = 1
	ImpactType_Concentrations     ImpactType = 2
)

var ImpactType_name = map[int32]string{
	0: "UNKNOWN_IMPACTTYPE",
	1: "Emissions",
	2: "Concentrations",
}

var ImpactType_value = map[string]int32{
	"UNKNOWN_IMPACTTYPE": 0,
	"Emissions":          1,
	"Concentrations":     2,
}

func (x ImpactType) String() string {
	return proto.EnumName(ImpactType_name, int32(x))
}

func (ImpactType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{1}
}

type CitiesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CitiesRequest) Reset()         { *m = CitiesRequest{} }
func (m *CitiesRequest) String() string { return proto.CompactTextString(m) }
func (*CitiesRequest) ProtoMessage()    {}
func (*CitiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{0}
}

func (m *CitiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CitiesRequest.Unmarshal(m, b)
}
func (m *CitiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CitiesRequest.Marshal(b, m, deterministic)
}
func (m *CitiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CitiesRequest.Merge(m, src)
}
func (m *CitiesRequest) XXX_Size() int {
	return xxx_messageInfo_CitiesRequest.Size(m)
}
func (m *CitiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CitiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CitiesRequest proto.InternalMessageInfo

type CitiesResponse struct {
	// The names of the cities
	Names                []string `protobuf:"bytes,1,rep,name=Names,proto3" json:"Names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CitiesResponse) Reset()         { *m = CitiesResponse{} }
func (m *CitiesResponse) String() string { return proto.CompactTextString(m) }
func (*CitiesResponse) ProtoMessage()    {}
func (*CitiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{1}
}

func (m *CitiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CitiesResponse.Unmarshal(m, b)
}
func (m *CitiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CitiesResponse.Marshal(b, m, deterministic)
}
func (m *CitiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CitiesResponse.Merge(m, src)
}
func (m *CitiesResponse) XXX_Size() int {
	return xxx_messageInfo_CitiesResponse.Size(m)
}
func (m *CitiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CitiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CitiesResponse proto.InternalMessageInfo

func (m *CitiesResponse) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

type CityGeometryRequest struct {
	CityName             string   `protobuf:"bytes,1,opt,name=CityName,proto3" json:"CityName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CityGeometryRequest) Reset()         { *m = CityGeometryRequest{} }
func (m *CityGeometryRequest) String() string { return proto.CompactTextString(m) }
func (*CityGeometryRequest) ProtoMessage()    {}
func (*CityGeometryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{2}
}

func (m *CityGeometryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CityGeometryRequest.Unmarshal(m, b)
}
func (m *CityGeometryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CityGeometryRequest.Marshal(b, m, deterministic)
}
func (m *CityGeometryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CityGeometryRequest.Merge(m, src)
}
func (m *CityGeometryRequest) XXX_Size() int {
	return xxx_messageInfo_CityGeometryRequest.Size(m)
}
func (m *CityGeometryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CityGeometryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CityGeometryRequest proto.InternalMessageInfo

func (m *CityGeometryRequest) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

type CityGeometryResponse struct {
	Polygons             []*Polygon `protobuf:"bytes,1,rep,name=Polygons,proto3" json:"Polygons,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CityGeometryResponse) Reset()         { *m = CityGeometryResponse{} }
func (m *CityGeometryResponse) String() string { return proto.CompactTextString(m) }
func (*CityGeometryResponse) ProtoMessage()    {}
func (*CityGeometryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{3}
}

func (m *CityGeometryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CityGeometryResponse.Unmarshal(m, b)
}
func (m *CityGeometryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CityGeometryResponse.Marshal(b, m, deterministic)
}
func (m *CityGeometryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CityGeometryResponse.Merge(m, src)
}
func (m *CityGeometryResponse) XXX_Size() int {
	return xxx_messageInfo_CityGeometryResponse.Size(m)
}
func (m *CityGeometryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CityGeometryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CityGeometryResponse proto.InternalMessageInfo

func (m *CityGeometryResponse) GetPolygons() []*Polygon {
	if m != nil {
		return m.Polygons
	}
	return nil
}

type Polygon struct {
	Paths                []*Path  `protobuf:"bytes,1,rep,name=Paths,proto3" json:"Paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Polygon) Reset()         { *m = Polygon{} }
func (m *Polygon) String() string { return proto.CompactTextString(m) }
func (*Polygon) ProtoMessage()    {}
func (*Polygon) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{4}
}

func (m *Polygon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Polygon.Unmarshal(m, b)
}
func (m *Polygon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Polygon.Marshal(b, m, deterministic)
}
func (m *Polygon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Polygon.Merge(m, src)
}
func (m *Polygon) XXX_Size() int {
	return xxx_messageInfo_Polygon.Size(m)
}
func (m *Polygon) XXX_DiscardUnknown() {
	xxx_messageInfo_Polygon.DiscardUnknown(m)
}

var xxx_messageInfo_Polygon proto.InternalMessageInfo

func (m *Polygon) GetPaths() []*Path {
	if m != nil {
		return m.Paths
	}
	return nil
}

type Path struct {
	Points               []*Point `protobuf:"bytes,1,rep,name=Points,proto3" json:"Points,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Path) Reset()         { *m = Path{} }
func (m *Path) String() string { return proto.CompactTextString(m) }
func (*Path) ProtoMessage()    {}
func (*Path) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{5}
}

func (m *Path) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Path.Unmarshal(m, b)
}
func (m *Path) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Path.Marshal(b, m, deterministic)
}
func (m *Path) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Path.Merge(m, src)
}
func (m *Path) XXX_Size() int {
	return xxx_messageInfo_Path.Size(m)
}
func (m *Path) XXX_DiscardUnknown() {
	xxx_messageInfo_Path.DiscardUnknown(m)
}

var xxx_messageInfo_Path proto.InternalMessageInfo

func (m *Path) GetPoints() []*Point {
	if m != nil {
		return m.Points
	}
	return nil
}

type Point struct {
	X                    float64  `protobuf:"fixed64,1,opt,name=X,proto3" json:"X,omitempty"`
	Y                    float64  `protobuf:"fixed64,2,opt,name=Y,proto3" json:"Y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Point) Reset()         { *m = Point{} }
func (m *Point) String() string { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()    {}
func (*Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{6}
}

func (m *Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Point.Unmarshal(m, b)
}
func (m *Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Point.Marshal(b, m, deterministic)
}
func (m *Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Point.Merge(m, src)
}
func (m *Point) XXX_Size() int {
	return xxx_messageInfo_Point.Size(m)
}
func (m *Point) XXX_DiscardUnknown() {
	xxx_messageInfo_Point.DiscardUnknown(m)
}

var xxx_messageInfo_Point proto.InternalMessageInfo

func (m *Point) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Point) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

type GriddedEmissionsRequest struct {
	CityName             string   `protobuf:"bytes,1,opt,name=CityName,proto3" json:"CityName,omitempty"`
	SourceType           string   `protobuf:"bytes,2,opt,name=SourceType,proto3" json:"SourceType,omitempty"`
	Emission             Emission `protobuf:"varint,3,opt,name=Emission,proto3,enum=cityaqrpc.Emission" json:"Emission,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GriddedEmissionsRequest) Reset()         { *m = GriddedEmissionsRequest{} }
func (m *GriddedEmissionsRequest) String() string { return proto.CompactTextString(m) }
func (*GriddedEmissionsRequest) ProtoMessage()    {}
func (*GriddedEmissionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{7}
}

func (m *GriddedEmissionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GriddedEmissionsRequest.Unmarshal(m, b)
}
func (m *GriddedEmissionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GriddedEmissionsRequest.Marshal(b, m, deterministic)
}
func (m *GriddedEmissionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GriddedEmissionsRequest.Merge(m, src)
}
func (m *GriddedEmissionsRequest) XXX_Size() int {
	return xxx_messageInfo_GriddedEmissionsRequest.Size(m)
}
func (m *GriddedEmissionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GriddedEmissionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GriddedEmissionsRequest proto.InternalMessageInfo

func (m *GriddedEmissionsRequest) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

func (m *GriddedEmissionsRequest) GetSourceType() string {
	if m != nil {
		return m.SourceType
	}
	return ""
}

func (m *GriddedEmissionsRequest) GetEmission() Emission {
	if m != nil {
		return m.Emission
	}
	return Emission_UNKNOWN_EMISSION
}

type GriddedEmissionsResponse struct {
	Polygons             []*Polygon `protobuf:"bytes,1,rep,name=Polygons,proto3" json:"Polygons,omitempty"`
	Emissions            []float64  `protobuf:"fixed64,2,rep,packed,name=Emissions,proto3" json:"Emissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GriddedEmissionsResponse) Reset()         { *m = GriddedEmissionsResponse{} }
func (m *GriddedEmissionsResponse) String() string { return proto.CompactTextString(m) }
func (*GriddedEmissionsResponse) ProtoMessage()    {}
func (*GriddedEmissionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{8}
}

func (m *GriddedEmissionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GriddedEmissionsResponse.Unmarshal(m, b)
}
func (m *GriddedEmissionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GriddedEmissionsResponse.Marshal(b, m, deterministic)
}
func (m *GriddedEmissionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GriddedEmissionsResponse.Merge(m, src)
}
func (m *GriddedEmissionsResponse) XXX_Size() int {
	return xxx_messageInfo_GriddedEmissionsResponse.Size(m)
}
func (m *GriddedEmissionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GriddedEmissionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GriddedEmissionsResponse proto.InternalMessageInfo

func (m *GriddedEmissionsResponse) GetPolygons() []*Polygon {
	if m != nil {
		return m.Polygons
	}
	return nil
}

func (m *GriddedEmissionsResponse) GetEmissions() []float64 {
	if m != nil {
		return m.Emissions
	}
	return nil
}

type GriddedConcentrationsRequest struct {
	CityName             string   `protobuf:"bytes,1,opt,name=CityName,proto3" json:"CityName,omitempty"`
	SourceType           string   `protobuf:"bytes,2,opt,name=SourceType,proto3" json:"SourceType,omitempty"`
	Emission             Emission `protobuf:"varint,3,opt,name=Emission,proto3,enum=cityaqrpc.Emission" json:"Emission,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GriddedConcentrationsRequest) Reset()         { *m = GriddedConcentrationsRequest{} }
func (m *GriddedConcentrationsRequest) String() string { return proto.CompactTextString(m) }
func (*GriddedConcentrationsRequest) ProtoMessage()    {}
func (*GriddedConcentrationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{9}
}

func (m *GriddedConcentrationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GriddedConcentrationsRequest.Unmarshal(m, b)
}
func (m *GriddedConcentrationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GriddedConcentrationsRequest.Marshal(b, m, deterministic)
}
func (m *GriddedConcentrationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GriddedConcentrationsRequest.Merge(m, src)
}
func (m *GriddedConcentrationsRequest) XXX_Size() int {
	return xxx_messageInfo_GriddedConcentrationsRequest.Size(m)
}
func (m *GriddedConcentrationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GriddedConcentrationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GriddedConcentrationsRequest proto.InternalMessageInfo

func (m *GriddedConcentrationsRequest) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

func (m *GriddedConcentrationsRequest) GetSourceType() string {
	if m != nil {
		return m.SourceType
	}
	return ""
}

func (m *GriddedConcentrationsRequest) GetEmission() Emission {
	if m != nil {
		return m.Emission
	}
	return Emission_UNKNOWN_EMISSION
}

type GriddedConcentrationsResponse struct {
	Polygons             []*Polygon `protobuf:"bytes,1,rep,name=Polygons,proto3" json:"Polygons,omitempty"`
	Concentrations       []float64  `protobuf:"fixed64,2,rep,packed,name=Concentrations,proto3" json:"Concentrations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GriddedConcentrationsResponse) Reset()         { *m = GriddedConcentrationsResponse{} }
func (m *GriddedConcentrationsResponse) String() string { return proto.CompactTextString(m) }
func (*GriddedConcentrationsResponse) ProtoMessage()    {}
func (*GriddedConcentrationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{10}
}

func (m *GriddedConcentrationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GriddedConcentrationsResponse.Unmarshal(m, b)
}
func (m *GriddedConcentrationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GriddedConcentrationsResponse.Marshal(b, m, deterministic)
}
func (m *GriddedConcentrationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GriddedConcentrationsResponse.Merge(m, src)
}
func (m *GriddedConcentrationsResponse) XXX_Size() int {
	return xxx_messageInfo_GriddedConcentrationsResponse.Size(m)
}
func (m *GriddedConcentrationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GriddedConcentrationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GriddedConcentrationsResponse proto.InternalMessageInfo

func (m *GriddedConcentrationsResponse) GetPolygons() []*Polygon {
	if m != nil {
		return m.Polygons
	}
	return nil
}

func (m *GriddedConcentrationsResponse) GetConcentrations() []float64 {
	if m != nil {
		return m.Concentrations
	}
	return nil
}

type EmissionsGridBoundsRequest struct {
	CityName             string   `protobuf:"bytes,1,opt,name=CityName,proto3" json:"CityName,omitempty"`
	SourceType           string   `protobuf:"bytes,2,opt,name=SourceType,proto3" json:"SourceType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmissionsGridBoundsRequest) Reset()         { *m = EmissionsGridBoundsRequest{} }
func (m *EmissionsGridBoundsRequest) String() string { return proto.CompactTextString(m) }
func (*EmissionsGridBoundsRequest) ProtoMessage()    {}
func (*EmissionsGridBoundsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{11}
}

func (m *EmissionsGridBoundsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmissionsGridBoundsRequest.Unmarshal(m, b)
}
func (m *EmissionsGridBoundsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmissionsGridBoundsRequest.Marshal(b, m, deterministic)
}
func (m *EmissionsGridBoundsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmissionsGridBoundsRequest.Merge(m, src)
}
func (m *EmissionsGridBoundsRequest) XXX_Size() int {
	return xxx_messageInfo_EmissionsGridBoundsRequest.Size(m)
}
func (m *EmissionsGridBoundsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmissionsGridBoundsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmissionsGridBoundsRequest proto.InternalMessageInfo

func (m *EmissionsGridBoundsRequest) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

func (m *EmissionsGridBoundsRequest) GetSourceType() string {
	if m != nil {
		return m.SourceType
	}
	return ""
}

type EmissionsGridBoundsResponse struct {
	Min                  *Point   `protobuf:"bytes,1,opt,name=Min,proto3" json:"Min,omitempty"`
	Max                  *Point   `protobuf:"bytes,2,opt,name=Max,proto3" json:"Max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmissionsGridBoundsResponse) Reset()         { *m = EmissionsGridBoundsResponse{} }
func (m *EmissionsGridBoundsResponse) String() string { return proto.CompactTextString(m) }
func (*EmissionsGridBoundsResponse) ProtoMessage()    {}
func (*EmissionsGridBoundsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{12}
}

func (m *EmissionsGridBoundsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmissionsGridBoundsResponse.Unmarshal(m, b)
}
func (m *EmissionsGridBoundsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmissionsGridBoundsResponse.Marshal(b, m, deterministic)
}
func (m *EmissionsGridBoundsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmissionsGridBoundsResponse.Merge(m, src)
}
func (m *EmissionsGridBoundsResponse) XXX_Size() int {
	return xxx_messageInfo_EmissionsGridBoundsResponse.Size(m)
}
func (m *EmissionsGridBoundsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EmissionsGridBoundsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EmissionsGridBoundsResponse proto.InternalMessageInfo

func (m *EmissionsGridBoundsResponse) GetMin() *Point {
	if m != nil {
		return m.Min
	}
	return nil
}

func (m *EmissionsGridBoundsResponse) GetMax() *Point {
	if m != nil {
		return m.Max
	}
	return nil
}

type MapScaleRequest struct {
	CityName             string     `protobuf:"bytes,1,opt,name=CityName,proto3" json:"CityName,omitempty"`
	ImpactType           ImpactType `protobuf:"varint,2,opt,name=ImpactType,proto3,enum=cityaqrpc.ImpactType" json:"ImpactType,omitempty"`
	Emission             Emission   `protobuf:"varint,3,opt,name=Emission,proto3,enum=cityaqrpc.Emission" json:"Emission,omitempty"`
	SourceType           string     `protobuf:"bytes,4,opt,name=SourceType,proto3" json:"SourceType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MapScaleRequest) Reset()         { *m = MapScaleRequest{} }
func (m *MapScaleRequest) String() string { return proto.CompactTextString(m) }
func (*MapScaleRequest) ProtoMessage()    {}
func (*MapScaleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{13}
}

func (m *MapScaleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MapScaleRequest.Unmarshal(m, b)
}
func (m *MapScaleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MapScaleRequest.Marshal(b, m, deterministic)
}
func (m *MapScaleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MapScaleRequest.Merge(m, src)
}
func (m *MapScaleRequest) XXX_Size() int {
	return xxx_messageInfo_MapScaleRequest.Size(m)
}
func (m *MapScaleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MapScaleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MapScaleRequest proto.InternalMessageInfo

func (m *MapScaleRequest) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

func (m *MapScaleRequest) GetImpactType() ImpactType {
	if m != nil {
		return m.ImpactType
	}
	return ImpactType_UNKNOWN_IMPACTTYPE
}

func (m *MapScaleRequest) GetEmission() Emission {
	if m != nil {
		return m.Emission
	}
	return Emission_UNKNOWN_EMISSION
}

func (m *MapScaleRequest) GetSourceType() string {
	if m != nil {
		return m.SourceType
	}
	return ""
}

type MapScaleResponse struct {
	Min                  float64  `protobuf:"fixed64,1,opt,name=Min,proto3" json:"Min,omitempty"`
	Max                  float64  `protobuf:"fixed64,2,opt,name=Max,proto3" json:"Max,omitempty"`
	CutPt                float64  `protobuf:"fixed64,3,opt,name=CutPt,proto3" json:"CutPt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MapScaleResponse) Reset()         { *m = MapScaleResponse{} }
func (m *MapScaleResponse) String() string { return proto.CompactTextString(m) }
func (*MapScaleResponse) ProtoMessage()    {}
func (*MapScaleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cccf5bb3409f35d, []int{14}
}

func (m *MapScaleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MapScaleResponse.Unmarshal(m, b)
}
func (m *MapScaleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MapScaleResponse.Marshal(b, m, deterministic)
}
func (m *MapScaleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MapScaleResponse.Merge(m, src)
}
func (m *MapScaleResponse) XXX_Size() int {
	return xxx_messageInfo_MapScaleResponse.Size(m)
}
func (m *MapScaleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MapScaleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MapScaleResponse proto.InternalMessageInfo

func (m *MapScaleResponse) GetMin() float64 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *MapScaleResponse) GetMax() float64 {
	if m != nil {
		return m.Max
	}
	return 0
}

func (m *MapScaleResponse) GetCutPt() float64 {
	if m != nil {
		return m.CutPt
	}
	return 0
}

func init() {
	proto.RegisterEnum("cityaqrpc.Emission", Emission_name, Emission_value)
	proto.RegisterEnum("cityaqrpc.ImpactType", ImpactType_name, ImpactType_value)
	proto.RegisterType((*CitiesRequest)(nil), "cityaqrpc.CitiesRequest")
	proto.RegisterType((*CitiesResponse)(nil), "cityaqrpc.CitiesResponse")
	proto.RegisterType((*CityGeometryRequest)(nil), "cityaqrpc.CityGeometryRequest")
	proto.RegisterType((*CityGeometryResponse)(nil), "cityaqrpc.CityGeometryResponse")
	proto.RegisterType((*Polygon)(nil), "cityaqrpc.Polygon")
	proto.RegisterType((*Path)(nil), "cityaqrpc.Path")
	proto.RegisterType((*Point)(nil), "cityaqrpc.Point")
	proto.RegisterType((*GriddedEmissionsRequest)(nil), "cityaqrpc.GriddedEmissionsRequest")
	proto.RegisterType((*GriddedEmissionsResponse)(nil), "cityaqrpc.GriddedEmissionsResponse")
	proto.RegisterType((*GriddedConcentrationsRequest)(nil), "cityaqrpc.GriddedConcentrationsRequest")
	proto.RegisterType((*GriddedConcentrationsResponse)(nil), "cityaqrpc.GriddedConcentrationsResponse")
	proto.RegisterType((*EmissionsGridBoundsRequest)(nil), "cityaqrpc.EmissionsGridBoundsRequest")
	proto.RegisterType((*EmissionsGridBoundsResponse)(nil), "cityaqrpc.EmissionsGridBoundsResponse")
	proto.RegisterType((*MapScaleRequest)(nil), "cityaqrpc.MapScaleRequest")
	proto.RegisterType((*MapScaleResponse)(nil), "cityaqrpc.MapScaleResponse")
}

func init() { proto.RegisterFile("cityaq.proto", fileDescriptor_7cccf5bb3409f35d) }

var fileDescriptor_7cccf5bb3409f35d = []byte{
	// 675 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x55, 0xdd, 0x4e, 0x13, 0x41,
	0x14, 0x66, 0xfa, 0x03, 0xed, 0x91, 0x9f, 0xc9, 0x01, 0x74, 0x5d, 0x10, 0x9b, 0x21, 0x60, 0xc3,
	0x45, 0xc5, 0x12, 0xae, 0x0d, 0x36, 0x15, 0x1b, 0x6d, 0xbb, 0x4c, 0x51, 0xe1, 0xc2, 0x90, 0xb5,
	0x1d, 0x65, 0x13, 0xba, 0x5b, 0xba, 0xd3, 0xd8, 0xbe, 0x80, 0x37, 0xbe, 0x80, 0x2f, 0xe2, 0xfb,
	0x99, 0xfd, 0xdf, 0x6e, 0x17, 0x41, 0x62, 0xe2, 0xdd, 0x39, 0x73, 0xbe, 0xf3, 0x9d, 0x6f, 0xbe,
	0xce, 0x9e, 0xc2, 0x62, 0xd7, 0x90, 0x13, 0xfd, 0xba, 0x32, 0x18, 0x5a, 0xd2, 0xc2, 0xa2, 0x97,
	0x0d, 0x07, 0x5d, 0xb6, 0x02, 0x4b, 0x35, 0x43, 0x1a, 0xc2, 0xe6, 0xe2, 0x7a, 0x24, 0x6c, 0xc9,
	0x76, 0x61, 0x39, 0x38, 0xb0, 0x07, 0x96, 0x69, 0x0b, 0x5c, 0x83, 0x7c, 0x4b, 0xef, 0x0b, 0x5b,
	0x21, 0xa5, 0x6c, 0xb9, 0xc8, 0xbd, 0x84, 0xbd, 0x80, 0xd5, 0x9a, 0x21, 0x27, 0xc7, 0xc2, 0xea,
	0x0b, 0x39, 0x9c, 0xf8, 0xed, 0xa8, 0x42, 0xc1, 0x39, 0x76, 0x30, 0x0a, 0x29, 0x91, 0x72, 0x91,
	0x87, 0x39, 0x7b, 0x0d, 0x6b, 0xd3, 0x2d, 0xfe, 0x80, 0x0a, 0x14, 0x34, 0xeb, 0x6a, 0xf2, 0xd5,
	0x32, 0xbd, 0x19, 0x0f, 0xaa, 0x58, 0x09, 0x15, 0x56, 0xfc, 0x12, 0x0f, 0x31, 0x6c, 0x1f, 0x16,
	0xfc, 0x18, 0x77, 0x20, 0xaf, 0xe9, 0xf2, 0x32, 0xe8, 0x5b, 0x89, 0xf7, 0xe9, 0xf2, 0x92, 0x7b,
	0x55, 0xb6, 0x0f, 0x39, 0x27, 0xc0, 0x32, 0xcc, 0x6b, 0x96, 0x61, 0xca, 0x00, 0x4f, 0xa7, 0xe6,
	0x18, 0xa6, 0xe4, 0x7e, 0x9d, 0x6d, 0x43, 0xde, 0x8d, 0x70, 0x11, 0xc8, 0x99, 0x7b, 0x13, 0xc2,
	0xc9, 0x99, 0x93, 0x9d, 0x2b, 0x19, 0x2f, 0x3b, 0x67, 0xdf, 0x09, 0x3c, 0x3a, 0x1e, 0x1a, 0xbd,
	0x9e, 0xe8, 0xd5, 0xfb, 0x86, 0x6d, 0x1b, 0x96, 0x69, 0xdf, 0xc1, 0x08, 0xdc, 0x02, 0xe8, 0x58,
	0xa3, 0x61, 0x57, 0x9c, 0x4e, 0x06, 0xc2, 0xa5, 0x2b, 0xf2, 0xd8, 0x09, 0x3e, 0x87, 0x42, 0xc0,
	0xa7, 0x64, 0x4b, 0xa4, 0xbc, 0x5c, 0x5d, 0x8d, 0x09, 0x0d, 0x4a, 0x3c, 0x04, 0xb1, 0x4b, 0x50,
	0x66, 0x75, 0xdc, 0xcf, 0x5d, 0xdc, 0x84, 0x62, 0x48, 0xa2, 0x64, 0x4a, 0xd9, 0x32, 0xe1, 0xd1,
	0x01, 0xfb, 0x41, 0x60, 0xd3, 0x1f, 0x55, 0xb3, 0xcc, 0xae, 0x30, 0xe5, 0x50, 0x97, 0xff, 0xed,
	0xde, 0xdf, 0xe0, 0xc9, 0x0d, 0x62, 0xee, 0x79, 0x79, 0xe7, 0xf5, 0x4f, 0x31, 0xf9, 0x0e, 0x24,
	0x4e, 0xd9, 0x19, 0xa8, 0xa1, 0x27, 0x8e, 0x82, 0x57, 0xd6, 0xc8, 0xec, 0xfd, 0x0b, 0x0f, 0x98,
	0x80, 0x8d, 0x54, 0x66, 0xff, 0x42, 0x0c, 0xb2, 0x4d, 0xc3, 0x74, 0x59, 0xd3, 0x9e, 0xaf, 0x53,
	0x74, 0x31, 0xfa, 0xd8, 0xe5, 0x4e, 0xc7, 0xe8, 0x63, 0xf6, 0x8b, 0xc0, 0x4a, 0x53, 0x1f, 0x74,
	0xba, 0xfa, 0x95, 0xb8, 0x8b, 0xec, 0x43, 0x80, 0x46, 0x7f, 0xa0, 0x77, 0x65, 0x28, 0x7b, 0xb9,
	0xba, 0x1e, 0xa3, 0x8e, 0x8a, 0x3c, 0x06, 0xfc, 0xeb, 0x5f, 0x34, 0x61, 0x4f, 0x6e, 0xc6, 0x9e,
	0x77, 0x40, 0x23, 0xd9, 0xbe, 0x27, 0x34, 0xf2, 0x84, 0x78, 0x0e, 0xd0, 0xc8, 0x01, 0xe2, 0xde,
	0xd7, 0x59, 0x62, 0xb5, 0x91, 0xd4, 0xa4, 0xab, 0x82, 0x70, 0x2f, 0xd9, 0x6b, 0x47, 0xf2, 0x70,
	0x0d, 0xe8, 0xfb, 0xd6, 0xdb, 0x56, 0xfb, 0x63, 0xeb, 0xa2, 0xde, 0x6c, 0x74, 0x3a, 0x8d, 0x76,
	0x8b, 0xce, 0x61, 0x11, 0xf2, 0x5a, 0xb3, 0x7a, 0x71, 0x48, 0x09, 0x2e, 0x40, 0xb6, 0xf5, 0xe6,
	0x80, 0x66, 0xdc, 0xa0, 0x3d, 0xa6, 0x59, 0x27, 0xe8, 0xb4, 0xc7, 0x34, 0xe7, 0x04, 0x1f, 0xda,
	0x35, 0x9a, 0xdf, 0x3b, 0x8e, 0xdb, 0x84, 0x0f, 0x01, 0x03, 0xca, 0x46, 0x53, 0x3b, 0xaa, 0x9d,
	0x9e, 0x9e, 0x6b, 0x75, 0x3a, 0x87, 0x4b, 0xb1, 0x4f, 0x8c, 0x12, 0xc4, 0xe4, 0xa3, 0xa3, 0x99,
	0xea, 0xcf, 0x1c, 0xcc, 0x3b, 0xe6, 0x1f, 0x9d, 0xe0, 0x4b, 0x37, 0x32, 0x84, 0x8d, 0x4a, 0xcc,
	0xbb, 0xa9, 0xad, 0xad, 0x3e, 0x4e, 0xa9, 0x78, 0xee, 0xb0, 0x39, 0x3c, 0x81, 0xc5, 0xf8, 0xde,
	0xc5, 0xad, 0x69, 0x70, 0x72, 0x87, 0xab, 0x4f, 0x6f, 0xac, 0x87, 0x94, 0x9f, 0x80, 0x26, 0x17,
	0x0e, 0xb2, 0x58, 0xdb, 0x0d, 0x5b, 0x51, 0xdd, 0xfe, 0x23, 0x26, 0xa4, 0xff, 0x02, 0xab, 0x29,
	0x1f, 0x01, 0xee, 0xa4, 0xbc, 0x9d, 0xd9, 0xcf, 0x4f, 0xdd, 0xbd, 0x0d, 0x16, 0xce, 0xb9, 0x82,
	0xf5, 0xd4, 0xfd, 0x81, 0xcf, 0x66, 0x75, 0xa6, 0xae, 0x3b, 0xb5, 0x7c, 0x3b, 0x30, 0x9c, 0x56,
	0x87, 0x42, 0xf0, 0x76, 0x51, 0x8d, 0xf5, 0x25, 0xbe, 0x43, 0x75, 0x23, 0xb5, 0x16, 0xd0, 0x7c,
	0x9e, 0x77, 0xff, 0xc4, 0x0f, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0x2c, 0xda, 0x9e, 0x59, 0xd4,
	0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CityAQClient is the client API for CityAQ service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CityAQClient interface {
	Cities(ctx context.Context, in *CitiesRequest, opts ...grpc.CallOption) (*CitiesResponse, error)
	CityGeometry(ctx context.Context, in *CityGeometryRequest, opts ...grpc.CallOption) (*CityGeometryResponse, error)
	GriddedEmissions(ctx context.Context, in *GriddedEmissionsRequest, opts ...grpc.CallOption) (*GriddedEmissionsResponse, error)
	EmissionsGridBounds(ctx context.Context, in *EmissionsGridBoundsRequest, opts ...grpc.CallOption) (*EmissionsGridBoundsResponse, error)
	GriddedConcentrations(ctx context.Context, in *GriddedConcentrationsRequest, opts ...grpc.CallOption) (*GriddedConcentrationsResponse, error)
	MapScale(ctx context.Context, in *MapScaleRequest, opts ...grpc.CallOption) (*MapScaleResponse, error)
}

type cityAQClient struct {
	cc *grpc.ClientConn
}

func NewCityAQClient(cc *grpc.ClientConn) CityAQClient {
	return &cityAQClient{cc}
}

func (c *cityAQClient) Cities(ctx context.Context, in *CitiesRequest, opts ...grpc.CallOption) (*CitiesResponse, error) {
	out := new(CitiesResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/Cities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) CityGeometry(ctx context.Context, in *CityGeometryRequest, opts ...grpc.CallOption) (*CityGeometryResponse, error) {
	out := new(CityGeometryResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/CityGeometry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) GriddedEmissions(ctx context.Context, in *GriddedEmissionsRequest, opts ...grpc.CallOption) (*GriddedEmissionsResponse, error) {
	out := new(GriddedEmissionsResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/GriddedEmissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) EmissionsGridBounds(ctx context.Context, in *EmissionsGridBoundsRequest, opts ...grpc.CallOption) (*EmissionsGridBoundsResponse, error) {
	out := new(EmissionsGridBoundsResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/EmissionsGridBounds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) GriddedConcentrations(ctx context.Context, in *GriddedConcentrationsRequest, opts ...grpc.CallOption) (*GriddedConcentrationsResponse, error) {
	out := new(GriddedConcentrationsResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/GriddedConcentrations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) MapScale(ctx context.Context, in *MapScaleRequest, opts ...grpc.CallOption) (*MapScaleResponse, error) {
	out := new(MapScaleResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/MapScale", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CityAQServer is the server API for CityAQ service.
type CityAQServer interface {
	Cities(context.Context, *CitiesRequest) (*CitiesResponse, error)
	CityGeometry(context.Context, *CityGeometryRequest) (*CityGeometryResponse, error)
	GriddedEmissions(context.Context, *GriddedEmissionsRequest) (*GriddedEmissionsResponse, error)
	EmissionsGridBounds(context.Context, *EmissionsGridBoundsRequest) (*EmissionsGridBoundsResponse, error)
	GriddedConcentrations(context.Context, *GriddedConcentrationsRequest) (*GriddedConcentrationsResponse, error)
	MapScale(context.Context, *MapScaleRequest) (*MapScaleResponse, error)
}

// UnimplementedCityAQServer can be embedded to have forward compatible implementations.
type UnimplementedCityAQServer struct {
}

func (*UnimplementedCityAQServer) Cities(ctx context.Context, req *CitiesRequest) (*CitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Cities not implemented")
}
func (*UnimplementedCityAQServer) CityGeometry(ctx context.Context, req *CityGeometryRequest) (*CityGeometryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CityGeometry not implemented")
}
func (*UnimplementedCityAQServer) GriddedEmissions(ctx context.Context, req *GriddedEmissionsRequest) (*GriddedEmissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GriddedEmissions not implemented")
}
func (*UnimplementedCityAQServer) EmissionsGridBounds(ctx context.Context, req *EmissionsGridBoundsRequest) (*EmissionsGridBoundsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EmissionsGridBounds not implemented")
}
func (*UnimplementedCityAQServer) GriddedConcentrations(ctx context.Context, req *GriddedConcentrationsRequest) (*GriddedConcentrationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GriddedConcentrations not implemented")
}
func (*UnimplementedCityAQServer) MapScale(ctx context.Context, req *MapScaleRequest) (*MapScaleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MapScale not implemented")
}

func RegisterCityAQServer(s *grpc.Server, srv CityAQServer) {
	s.RegisterService(&_CityAQ_serviceDesc, srv)
}

func _CityAQ_Cities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).Cities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/Cities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).Cities(ctx, req.(*CitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_CityGeometry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CityGeometryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).CityGeometry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/CityGeometry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).CityGeometry(ctx, req.(*CityGeometryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_GriddedEmissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GriddedEmissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).GriddedEmissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/GriddedEmissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).GriddedEmissions(ctx, req.(*GriddedEmissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_EmissionsGridBounds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmissionsGridBoundsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).EmissionsGridBounds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/EmissionsGridBounds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).EmissionsGridBounds(ctx, req.(*EmissionsGridBoundsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_GriddedConcentrations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GriddedConcentrationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).GriddedConcentrations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/GriddedConcentrations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).GriddedConcentrations(ctx, req.(*GriddedConcentrationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_MapScale_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MapScaleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).MapScale(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/MapScale",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).MapScale(ctx, req.(*MapScaleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CityAQ_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cityaqrpc.CityAQ",
	HandlerType: (*CityAQServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Cities",
			Handler:    _CityAQ_Cities_Handler,
		},
		{
			MethodName: "CityGeometry",
			Handler:    _CityAQ_CityGeometry_Handler,
		},
		{
			MethodName: "GriddedEmissions",
			Handler:    _CityAQ_GriddedEmissions_Handler,
		},
		{
			MethodName: "EmissionsGridBounds",
			Handler:    _CityAQ_EmissionsGridBounds_Handler,
		},
		{
			MethodName: "GriddedConcentrations",
			Handler:    _CityAQ_GriddedConcentrations_Handler,
		},
		{
			MethodName: "MapScale",
			Handler:    _CityAQ_MapScale_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cityaq.proto",
}
