// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: cityaq.proto

//+build !js

//+build !js

package cityaqrpc

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Emission int32

const (
	Emission_UNKNOWN_EMISSION Emission = 0
	Emission_PM2_5            Emission = 1
	Emission_NH3              Emission = 2
	Emission_NOx              Emission = 3
	Emission_SOx              Emission = 4
	Emission_VOC              Emission = 5
)

// Enum value maps for Emission.
var (
	Emission_name = map[int32]string{
		0: "UNKNOWN_EMISSION",
		1: "PM2_5",
		2: "NH3",
		3: "NOx",
		4: "SOx",
		5: "VOC",
	}
	Emission_value = map[string]int32{
		"UNKNOWN_EMISSION": 0,
		"PM2_5":            1,
		"NH3":              2,
		"NOx":              3,
		"SOx":              4,
		"VOC":              5,
	}
)

func (x Emission) Enum() *Emission {
	p := new(Emission)
	*p = x
	return p
}

func (x Emission) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Emission) Descriptor() protoreflect.EnumDescriptor {
	return file_cityaq_proto_enumTypes[0].Descriptor()
}

func (Emission) Type() protoreflect.EnumType {
	return &file_cityaq_proto_enumTypes[0]
}

func (x Emission) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Emission.Descriptor instead.
func (Emission) EnumDescriptor() ([]byte, []int) {
	return file_cityaq_proto_rawDescGZIP(), []int{0}
}

type ImpactType int32

const (
	ImpactType_UNKNOWN_IMPACTTYPE ImpactType = 0
	ImpactType_Emissions          ImpactType = 1
	ImpactType_Concentrations     ImpactType = 2
)

// Enum value maps for ImpactType.
var (
	ImpactType_name = map[int32]string{
		0: "UNKNOWN_IMPACTTYPE",
		1: "Emissions",
		2: "Concentrations",
	}
	ImpactType_value = map[string]int32{
		"UNKNOWN_IMPACTTYPE": 0,
		"Emissions":          1,
		"Concentrations":     2,
	}
)

func (x ImpactType) Enum() *ImpactType {
	p := new(ImpactType)
	*p = x
	return p
}

func (x ImpactType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImpactType) Descriptor() protoreflect.EnumDescriptor {
	return file_cityaq_proto_enumTypes[1].Descriptor()
}

func (ImpactType) Type() protoreflect.EnumType {
	return &file_cityaq_proto_enumTypes[1]
}

func (x ImpactType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImpactType.Descriptor instead.
func (ImpactType) EnumDescriptor() ([]byte, []int) {
	return file_cityaq_proto_rawDescGZIP(), []int{1}
}

type CitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CitiesRequest) Reset() {
	*x = CitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cityaq_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CitiesRequest) ProtoMessage() {}

func (x *CitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cityaq_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CitiesRequest.ProtoReflect.Descriptor instead.
func (*CitiesRequest) Descriptor() ([]byte, []int) {
	return file_cityaq_proto_rawDescGZIP(), []int{0}
}

type CitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The names of the cities
	Names []string `protobuf:"bytes,1,rep,name=Names,proto3" json:"Names,omitempty"`
}

func (x *CitiesResponse) Reset() {
	*x = CitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cityaq_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CitiesResponse) ProtoMessage() {}

func (x *CitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cityaq_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CitiesResponse.ProtoReflect.Descriptor instead.
func (*CitiesResponse) Descriptor() ([]byte, []int) {
	return file_cityaq_proto_rawDescGZIP(), []int{1}
}

func (x *CitiesResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type CityGeometryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityName string `protobuf:"bytes,1,opt,name=CityName,proto3" json:"CityName,omitempty"`
}

func (x *CityGeometryRequest) Reset() {
	*x = CityGeometryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cityaq_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityGeometryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityGeometryRequest) ProtoMessage() {}

func (x *CityGeometryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cityaq_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityGeometryRequest.ProtoReflect.Descriptor instead.
func (*CityGeometryRequest) Descriptor() ([]byte, []int) {
	return file_cityaq_proto_rawDescGZIP(), []int{2}
}

func (x *CityGeometryRequest) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

type CityGeometryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Polygons []*Polygon `protobuf:"bytes,1,rep,name=Polygons,proto3" json:"Polygons,omitempty"`
}

func (x *CityGeometryResponse) Reset() {
	*x = CityGeometryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cityaq_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityGeometryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityGeometryResponse) ProtoMessage() {}

func (x *CityGeometryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cityaq_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityGeometryResponse.ProtoReflect.Descriptor instead.
func (*CityGeometryResponse) Descriptor() ([]byte, []int) {
	return file_cityaq_proto_rawDescGZIP(), []int{3}
}

func (x *CityGeometryResponse) GetPolygons() []*Polygon {
	if x != nil {
		return x.Polygons
	}
	return nil
}

type Polygon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paths []*Path `protobuf:"bytes,1,rep,name=Paths,proto3" json:"Paths,omitempty"`
}

func (x *Polygon) Reset() {
	*x = Polygon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cityaq_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Polygon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Polygon) ProtoMessage() {}

func (x *Polygon) ProtoReflect() protoreflect.Message {
	mi := &file_cityaq_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Polygon.ProtoReflect.Descriptor instead.
func (*Polygon) Descriptor() ([]byte, []int) {
	return file_cityaq_proto_rawDescGZIP(), []int{4}
}

func (x *Polygon) GetPaths() []*Path {
	if x != nil {
		return x.Paths
	}
	return nil
}

type Path struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Points []*Point `protobuf:"bytes,1,rep,name=Points,proto3" json:"Points,omitempty"`
}

func (x *Path) Reset() {
	*x = Path{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cityaq_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Path) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Path) ProtoMessage() {}

func (x *Path) ProtoReflect() protoreflect.Message {
	mi := &file_cityaq_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Path.ProtoReflect.Descriptor instead.
func (*Path) Descriptor() ([]byte, []int) {
	return file_cityaq_proto_rawDescGZIP(), []int{5}
}

func (x *Path) GetPoints() []*Point {
	if x != nil {
		return x.Points
	}
	return nil
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float64 `protobuf:"fixed64,1,opt,name=X,proto3" json:"X,omitempty"`
	Y float64 `protobuf:"fixed64,2,opt,name=Y,proto3" json:"Y,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cityaq_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_cityaq_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_cityaq_proto_rawDescGZIP(), []int{6}
}

func (x *Point) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Point) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

type GriddedEmissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityName   string   `protobuf:"bytes,1,opt,name=CityName,proto3" json:"CityName,omitempty"`
	SourceType string   `protobuf:"bytes,2,opt,name=SourceType,proto3" json:"SourceType,omitempty"`
	Emission   Emission `protobuf:"varint,3,opt,name=Emission,proto3,enum=cityaqrpc.Emission" json:"Emission,omitempty"`
}

func (x *GriddedEmissionsRequest) Reset() {
	*x = GriddedEmissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cityaq_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GriddedEmissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GriddedEmissionsRequest) ProtoMessage() {}

func (x *GriddedEmissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cityaq_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GriddedEmissionsRequest.ProtoReflect.Descriptor instead.
func (*GriddedEmissionsRequest) Descriptor() ([]byte, []int) {
	return file_cityaq_proto_rawDescGZIP(), []int{7}
}

func (x *GriddedEmissionsRequest) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *GriddedEmissionsRequest) GetSourceType() string {
	if x != nil {
		return x.SourceType
	}
	return ""
}

func (x *GriddedEmissionsRequest) GetEmission() Emission {
	if x != nil {
		return x.Emission
	}
	return Emission_UNKNOWN_EMISSION
}

type GriddedEmissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Polygons  []*Polygon `protobuf:"bytes,1,rep,name=Polygons,proto3" json:"Polygons,omitempty"`
	Emissions []float64  `protobuf:"fixed64,2,rep,packed,name=Emissions,proto3" json:"Emissions,omitempty"`
}

func (x *GriddedEmissionsResponse) Reset() {
	*x = GriddedEmissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cityaq_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GriddedEmissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GriddedEmissionsResponse) ProtoMessage() {}

func (x *GriddedEmissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cityaq_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GriddedEmissionsResponse.ProtoReflect.Descriptor instead.
func (*GriddedEmissionsResponse) Descriptor() ([]byte, []int) {
	return file_cityaq_proto_rawDescGZIP(), []int{8}
}

func (x *GriddedEmissionsResponse) GetPolygons() []*Polygon {
	if x != nil {
		return x.Polygons
	}
	return nil
}

func (x *GriddedEmissionsResponse) GetEmissions() []float64 {
	if x != nil {
		return x.Emissions
	}
	return nil
}

type GriddedConcentrationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityName   string   `protobuf:"bytes,1,opt,name=CityName,proto3" json:"CityName,omitempty"`
	SourceType string   `protobuf:"bytes,2,opt,name=SourceType,proto3" json:"SourceType,omitempty"`
	Emission   Emission `protobuf:"varint,3,opt,name=Emission,proto3,enum=cityaqrpc.Emission" json:"Emission,omitempty"`
}

func (x *GriddedConcentrationsRequest) Reset() {
	*x = GriddedConcentrationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cityaq_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GriddedConcentrationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GriddedConcentrationsRequest) ProtoMessage() {}

func (x *GriddedConcentrationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cityaq_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GriddedConcentrationsRequest.ProtoReflect.Descriptor instead.
func (*GriddedConcentrationsRequest) Descriptor() ([]byte, []int) {
	return file_cityaq_proto_rawDescGZIP(), []int{9}
}

func (x *GriddedConcentrationsRequest) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *GriddedConcentrationsRequest) GetSourceType() string {
	if x != nil {
		return x.SourceType
	}
	return ""
}

func (x *GriddedConcentrationsRequest) GetEmission() Emission {
	if x != nil {
		return x.Emission
	}
	return Emission_UNKNOWN_EMISSION
}

type GriddedConcentrationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Polygons       []*Polygon `protobuf:"bytes,1,rep,name=Polygons,proto3" json:"Polygons,omitempty"`
	Concentrations []float64  `protobuf:"fixed64,2,rep,packed,name=Concentrations,proto3" json:"Concentrations,omitempty"`
}

func (x *GriddedConcentrationsResponse) Reset() {
	*x = GriddedConcentrationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cityaq_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GriddedConcentrationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GriddedConcentrationsResponse) ProtoMessage() {}

func (x *GriddedConcentrationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cityaq_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GriddedConcentrationsResponse.ProtoReflect.Descriptor instead.
func (*GriddedConcentrationsResponse) Descriptor() ([]byte, []int) {
	return file_cityaq_proto_rawDescGZIP(), []int{10}
}

func (x *GriddedConcentrationsResponse) GetPolygons() []*Polygon {
	if x != nil {
		return x.Polygons
	}
	return nil
}

func (x *GriddedConcentrationsResponse) GetConcentrations() []float64 {
	if x != nil {
		return x.Concentrations
	}
	return nil
}

type GriddedPopulationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityName   string   `protobuf:"bytes,1,opt,name=CityName,proto3" json:"CityName,omitempty"`
	SourceType string   `protobuf:"bytes,2,opt,name=SourceType,proto3" json:"SourceType,omitempty"`
	Emission   Emission `protobuf:"varint,3,opt,name=Emission,proto3,enum=cityaqrpc.Emission" json:"Emission,omitempty"`
}

func (x *GriddedPopulationRequest) Reset() {
	*x = GriddedPopulationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cityaq_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GriddedPopulationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GriddedPopulationRequest) ProtoMessage() {}

func (x *GriddedPopulationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cityaq_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GriddedPopulationRequest.ProtoReflect.Descriptor instead.
func (*GriddedPopulationRequest) Descriptor() ([]byte, []int) {
	return file_cityaq_proto_rawDescGZIP(), []int{11}
}

func (x *GriddedPopulationRequest) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *GriddedPopulationRequest) GetSourceType() string {
	if x != nil {
		return x.SourceType
	}
	return ""
}

func (x *GriddedPopulationRequest) GetEmission() Emission {
	if x != nil {
		return x.Emission
	}
	return Emission_UNKNOWN_EMISSION
}

type GriddedPopulationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Polygons   []*Polygon `protobuf:"bytes,1,rep,name=Polygons,proto3" json:"Polygons,omitempty"`
	Population []float64  `protobuf:"fixed64,2,rep,packed,name=Population,proto3" json:"Population,omitempty"`
}

func (x *GriddedPopulationResponse) Reset() {
	*x = GriddedPopulationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cityaq_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GriddedPopulationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GriddedPopulationResponse) ProtoMessage() {}

func (x *GriddedPopulationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cityaq_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GriddedPopulationResponse.ProtoReflect.Descriptor instead.
func (*GriddedPopulationResponse) Descriptor() ([]byte, []int) {
	return file_cityaq_proto_rawDescGZIP(), []int{12}
}

func (x *GriddedPopulationResponse) GetPolygons() []*Polygon {
	if x != nil {
		return x.Polygons
	}
	return nil
}

func (x *GriddedPopulationResponse) GetPopulation() []float64 {
	if x != nil {
		return x.Population
	}
	return nil
}

type ImpactSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityName   string   `protobuf:"bytes,1,opt,name=CityName,proto3" json:"CityName,omitempty"`
	SourceType string   `protobuf:"bytes,2,opt,name=SourceType,proto3" json:"SourceType,omitempty"`
	Emission   Emission `protobuf:"varint,3,opt,name=Emission,proto3,enum=cityaqrpc.Emission" json:"Emission,omitempty"`
}

func (x *ImpactSummaryRequest) Reset() {
	*x = ImpactSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cityaq_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImpactSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImpactSummaryRequest) ProtoMessage() {}

func (x *ImpactSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cityaq_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImpactSummaryRequest.ProtoReflect.Descriptor instead.
func (*ImpactSummaryRequest) Descriptor() ([]byte, []int) {
	return file_cityaq_proto_rawDescGZIP(), []int{13}
}

func (x *ImpactSummaryRequest) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *ImpactSummaryRequest) GetSourceType() string {
	if x != nil {
		return x.SourceType
	}
	return ""
}

func (x *ImpactSummaryRequest) GetEmission() Emission {
	if x != nil {
		return x.Emission
	}
	return Emission_UNKNOWN_EMISSION
}

type ImpactSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Population is the total population.
	Population float64 `protobuf:"fixed64,1,opt,name=Population,proto3" json:"Population,omitempty"`
	// CityPopulation is the total population in the city.
	CityPopulation float64 `protobuf:"fixed64,2,opt,name=CityPopulation,proto3" json:"CityPopulation,omitempty"`
	// CityExposure is the population-weighted average
	// concentration in the city.
	CityExposure float64 `protobuf:"fixed64,3,opt,name=CityExposure,proto3" json:"CityExposure,omitempty"`
	// TotalExposure is the overall population-weighted average
	// concentration.
	TotalExposure float64 `protobuf:"fixed64,4,opt,name=TotalExposure,proto3" json:"TotalExposure,omitempty"`
	// CityIF is the intake fraction in the city.
	CityIF float64 `protobuf:"fixed64,5,opt,name=CityIF,proto3" json:"CityIF,omitempty"`
	// TotalIF is the total intake fraction.
	TotalIF float64 `protobuf:"fixed64,6,opt,name=TotalIF,proto3" json:"TotalIF,omitempty"`
}

func (x *ImpactSummaryResponse) Reset() {
	*x = ImpactSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cityaq_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImpactSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImpactSummaryResponse) ProtoMessage() {}

func (x *ImpactSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cityaq_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImpactSummaryResponse.ProtoReflect.Descriptor instead.
func (*ImpactSummaryResponse) Descriptor() ([]byte, []int) {
	return file_cityaq_proto_rawDescGZIP(), []int{14}
}

func (x *ImpactSummaryResponse) GetPopulation() float64 {
	if x != nil {
		return x.Population
	}
	return 0
}

func (x *ImpactSummaryResponse) GetCityPopulation() float64 {
	if x != nil {
		return x.CityPopulation
	}
	return 0
}

func (x *ImpactSummaryResponse) GetCityExposure() float64 {
	if x != nil {
		return x.CityExposure
	}
	return 0
}

func (x *ImpactSummaryResponse) GetTotalExposure() float64 {
	if x != nil {
		return x.TotalExposure
	}
	return 0
}

func (x *ImpactSummaryResponse) GetCityIF() float64 {
	if x != nil {
		return x.CityIF
	}
	return 0
}

func (x *ImpactSummaryResponse) GetTotalIF() float64 {
	if x != nil {
		return x.TotalIF
	}
	return 0
}

type EmissionsGridBoundsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityName   string `protobuf:"bytes,1,opt,name=CityName,proto3" json:"CityName,omitempty"`
	SourceType string `protobuf:"bytes,2,opt,name=SourceType,proto3" json:"SourceType,omitempty"`
}

func (x *EmissionsGridBoundsRequest) Reset() {
	*x = EmissionsGridBoundsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cityaq_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmissionsGridBoundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmissionsGridBoundsRequest) ProtoMessage() {}

func (x *EmissionsGridBoundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cityaq_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmissionsGridBoundsRequest.ProtoReflect.Descriptor instead.
func (*EmissionsGridBoundsRequest) Descriptor() ([]byte, []int) {
	return file_cityaq_proto_rawDescGZIP(), []int{15}
}

func (x *EmissionsGridBoundsRequest) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *EmissionsGridBoundsRequest) GetSourceType() string {
	if x != nil {
		return x.SourceType
	}
	return ""
}

type EmissionsGridBoundsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min *Point `protobuf:"bytes,1,opt,name=Min,proto3" json:"Min,omitempty"`
	Max *Point `protobuf:"bytes,2,opt,name=Max,proto3" json:"Max,omitempty"`
}

func (x *EmissionsGridBoundsResponse) Reset() {
	*x = EmissionsGridBoundsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cityaq_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmissionsGridBoundsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmissionsGridBoundsResponse) ProtoMessage() {}

func (x *EmissionsGridBoundsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cityaq_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmissionsGridBoundsResponse.ProtoReflect.Descriptor instead.
func (*EmissionsGridBoundsResponse) Descriptor() ([]byte, []int) {
	return file_cityaq_proto_rawDescGZIP(), []int{16}
}

func (x *EmissionsGridBoundsResponse) GetMin() *Point {
	if x != nil {
		return x.Min
	}
	return nil
}

func (x *EmissionsGridBoundsResponse) GetMax() *Point {
	if x != nil {
		return x.Max
	}
	return nil
}

type MapScaleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityName   string     `protobuf:"bytes,1,opt,name=CityName,proto3" json:"CityName,omitempty"`
	ImpactType ImpactType `protobuf:"varint,2,opt,name=ImpactType,proto3,enum=cityaqrpc.ImpactType" json:"ImpactType,omitempty"`
	Emission   Emission   `protobuf:"varint,3,opt,name=Emission,proto3,enum=cityaqrpc.Emission" json:"Emission,omitempty"`
	SourceType string     `protobuf:"bytes,4,opt,name=SourceType,proto3" json:"SourceType,omitempty"`
}

func (x *MapScaleRequest) Reset() {
	*x = MapScaleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cityaq_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapScaleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapScaleRequest) ProtoMessage() {}

func (x *MapScaleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cityaq_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapScaleRequest.ProtoReflect.Descriptor instead.
func (*MapScaleRequest) Descriptor() ([]byte, []int) {
	return file_cityaq_proto_rawDescGZIP(), []int{17}
}

func (x *MapScaleRequest) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *MapScaleRequest) GetImpactType() ImpactType {
	if x != nil {
		return x.ImpactType
	}
	return ImpactType_UNKNOWN_IMPACTTYPE
}

func (x *MapScaleRequest) GetEmission() Emission {
	if x != nil {
		return x.Emission
	}
	return Emission_UNKNOWN_EMISSION
}

func (x *MapScaleRequest) GetSourceType() string {
	if x != nil {
		return x.SourceType
	}
	return ""
}

type MapScaleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min   float64 `protobuf:"fixed64,1,opt,name=Min,proto3" json:"Min,omitempty"`
	Max   float64 `protobuf:"fixed64,2,opt,name=Max,proto3" json:"Max,omitempty"`
	CutPt float64 `protobuf:"fixed64,3,opt,name=CutPt,proto3" json:"CutPt,omitempty"`
}

func (x *MapScaleResponse) Reset() {
	*x = MapScaleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cityaq_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapScaleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapScaleResponse) ProtoMessage() {}

func (x *MapScaleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cityaq_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapScaleResponse.ProtoReflect.Descriptor instead.
func (*MapScaleResponse) Descriptor() ([]byte, []int) {
	return file_cityaq_proto_rawDescGZIP(), []int{18}
}

func (x *MapScaleResponse) GetMin() float64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *MapScaleResponse) GetMax() float64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *MapScaleResponse) GetCutPt() float64 {
	if x != nil {
		return x.CutPt
	}
	return 0
}

var File_cityaq_proto protoreflect.FileDescriptor

var file_cityaq_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x69, 0x74, 0x79, 0x61, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x63, 0x69, 0x74, 0x79, 0x61, 0x71, 0x72, 0x70, 0x63, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x26, 0x0a, 0x0e, 0x43, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x22, 0x31, 0x0a, 0x13, 0x43, 0x69, 0x74, 0x79, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x69, 0x74,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x69, 0x74,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x46, 0x0a, 0x14, 0x43, 0x69, 0x74, 0x79, 0x47, 0x65, 0x6f,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x08, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x61, 0x71, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x6c, 0x79,
	0x67, 0x6f, 0x6e, 0x52, 0x08, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x73, 0x22, 0x30, 0x0a,
	0x07, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x05, 0x50, 0x61, 0x74, 0x68,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x61, 0x71,
	0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x05, 0x50, 0x61, 0x74, 0x68, 0x73, 0x22,
	0x30, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x06, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x61, 0x71,
	0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x22, 0x23, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x58, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x58, 0x12, 0x0c, 0x0a, 0x01, 0x59, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x01, 0x59, 0x22, 0x86, 0x01, 0x0a, 0x17, 0x47, 0x72, 0x69, 0x64, 0x64,
	0x65, 0x64, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2f,
	0x0a, 0x08, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x61, 0x71, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x68, 0x0a, 0x18, 0x47, 0x72, 0x69, 0x64, 0x64, 0x65, 0x64, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x50,
	0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x69, 0x74, 0x79, 0x61, 0x71, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f,
	0x6e, 0x52, 0x08, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x45,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x01, 0x52, 0x09,
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x1c, 0x47, 0x72,
	0x69, 0x64, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x69,
	0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x69,
	0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x61,
	0x71, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x45,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x77, 0x0a, 0x1d, 0x47, 0x72, 0x69, 0x64, 0x64,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x50, 0x6f, 0x6c, 0x79,
	0x67, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x69, 0x74,
	0x79, 0x61, 0x71, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x52, 0x08,
	0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x63,
	0x65, 0x6e, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x01,
	0x52, 0x0e, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x87, 0x01, 0x0a, 0x18, 0x47, 0x72, 0x69, 0x64, 0x64, 0x65, 0x64, 0x50, 0x6f, 0x70, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x43, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x45, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x69,
	0x74, 0x79, 0x61, 0x71, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x6b, 0x0a, 0x19, 0x47, 0x72,
	0x69, 0x64, 0x64, 0x65, 0x64, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x50, 0x6f, 0x6c, 0x79, 0x67,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x61, 0x71, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x52, 0x08, 0x50,
	0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6f, 0x70, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x01, 0x52, 0x0a, 0x50, 0x6f, 0x70,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x83, 0x01, 0x0a, 0x14, 0x49, 0x6d, 0x70, 0x61,
	0x63, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x08,
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x63, 0x69, 0x74, 0x79, 0x61, 0x71, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xdb, 0x01,
	0x0a, 0x15, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6f, 0x70, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x50, 0x6f, 0x70,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x69, 0x74, 0x79, 0x50,
	0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0e, 0x43, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x0a, 0x0c, 0x43, 0x69, 0x74, 0x79, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x43, 0x69, 0x74, 0x79, 0x45, 0x78, 0x70, 0x6f, 0x73,
	0x75, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x78, 0x70, 0x6f,
	0x73, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x69, 0x74,
	0x79, 0x49, 0x46, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x43, 0x69, 0x74, 0x79, 0x49,
	0x46, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x46, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x46, 0x22, 0x58, 0x0a, 0x1a, 0x45,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x47, 0x72, 0x69, 0x64, 0x42, 0x6f, 0x75, 0x6e,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x69, 0x74,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x69, 0x74,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x65, 0x0a, 0x1b, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x47, 0x72, 0x69, 0x64, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x03, 0x4d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x61, 0x71, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x03, 0x4d, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x03, 0x4d, 0x61, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x61, 0x71, 0x72, 0x70,
	0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x03, 0x4d, 0x61, 0x78, 0x22, 0xb5, 0x01, 0x0a,
	0x0f, 0x4d, 0x61, 0x70, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x0a,
	0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x61, 0x71, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6d, 0x70,
	0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x61, 0x71, 0x72, 0x70,
	0x63, 0x2e, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x45, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x4c, 0x0a, 0x10, 0x4d, 0x61, 0x70, 0x53, 0x63, 0x61, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x4d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x61,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x4d, 0x61, 0x78, 0x12, 0x14, 0x0a, 0x05,
	0x43, 0x75, 0x74, 0x50, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x43, 0x75, 0x74,
	0x50, 0x74, 0x2a, 0x4f, 0x0a, 0x08, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x10, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x4d, 0x49, 0x53, 0x53, 0x49,
	0x4f, 0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x4d, 0x32, 0x5f, 0x35, 0x10, 0x01, 0x12,
	0x07, 0x0a, 0x03, 0x4e, 0x48, 0x33, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x4f, 0x78, 0x10,
	0x03, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x4f, 0x78, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x56, 0x4f,
	0x43, 0x10, 0x05, 0x2a, 0x47, 0x0a, 0x0a, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x49, 0x4d, 0x50,
	0x41, 0x43, 0x54, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x63,
	0x65, 0x6e, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x10, 0x02, 0x32, 0xd0, 0x05, 0x0a,
	0x06, 0x43, 0x69, 0x74, 0x79, 0x41, 0x51, 0x12, 0x3f, 0x0a, 0x06, 0x43, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x18, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x61, 0x71, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x69,
	0x74, 0x79, 0x61, 0x71, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0c, 0x43, 0x69, 0x74, 0x79,
	0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x1e, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x61,
	0x71, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x61,
	0x71, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x10, 0x47,
	0x72, 0x69, 0x64, 0x64, 0x65, 0x64, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x22, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x61, 0x71, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x72, 0x69, 0x64,
	0x64, 0x65, 0x64, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x61, 0x71, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x72, 0x69, 0x64, 0x64, 0x65, 0x64, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x13, 0x45, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x47, 0x72, 0x69, 0x64, 0x42, 0x6f, 0x75, 0x6e, 0x64,
	0x73, 0x12, 0x25, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x61, 0x71, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x47, 0x72, 0x69, 0x64, 0x42, 0x6f, 0x75, 0x6e, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x61,
	0x71, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x47, 0x72,
	0x69, 0x64, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6c, 0x0a, 0x15, 0x47, 0x72, 0x69, 0x64, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x6e,
	0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x2e, 0x63, 0x69,
	0x74, 0x79, 0x61, 0x71, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x72, 0x69, 0x64, 0x64, 0x65, 0x64, 0x43,
	0x6f, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x61, 0x71, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x72, 0x69, 0x64, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x45, 0x0a, 0x08, 0x4d, 0x61, 0x70, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x61, 0x71, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x63, 0x61, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x61,
	0x71, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x11, 0x47, 0x72, 0x69, 0x64, 0x64,
	0x65, 0x64, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x61, 0x71, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x72, 0x69, 0x64, 0x64, 0x65, 0x64,
	0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x61, 0x71, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x72,
	0x69, 0x64, 0x64, 0x65, 0x64, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0d, 0x49, 0x6d, 0x70,
	0x61, 0x63, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1f, 0x2e, 0x63, 0x69, 0x74,
	0x79, 0x61, 0x71, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x69,
	0x74, 0x79, 0x61, 0x71, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cityaq_proto_rawDescOnce sync.Once
	file_cityaq_proto_rawDescData = file_cityaq_proto_rawDesc
)

func file_cityaq_proto_rawDescGZIP() []byte {
	file_cityaq_proto_rawDescOnce.Do(func() {
		file_cityaq_proto_rawDescData = protoimpl.X.CompressGZIP(file_cityaq_proto_rawDescData)
	})
	return file_cityaq_proto_rawDescData
}

var file_cityaq_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_cityaq_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_cityaq_proto_goTypes = []interface{}{
	(Emission)(0),                         // 0: cityaqrpc.Emission
	(ImpactType)(0),                       // 1: cityaqrpc.ImpactType
	(*CitiesRequest)(nil),                 // 2: cityaqrpc.CitiesRequest
	(*CitiesResponse)(nil),                // 3: cityaqrpc.CitiesResponse
	(*CityGeometryRequest)(nil),           // 4: cityaqrpc.CityGeometryRequest
	(*CityGeometryResponse)(nil),          // 5: cityaqrpc.CityGeometryResponse
	(*Polygon)(nil),                       // 6: cityaqrpc.Polygon
	(*Path)(nil),                          // 7: cityaqrpc.Path
	(*Point)(nil),                         // 8: cityaqrpc.Point
	(*GriddedEmissionsRequest)(nil),       // 9: cityaqrpc.GriddedEmissionsRequest
	(*GriddedEmissionsResponse)(nil),      // 10: cityaqrpc.GriddedEmissionsResponse
	(*GriddedConcentrationsRequest)(nil),  // 11: cityaqrpc.GriddedConcentrationsRequest
	(*GriddedConcentrationsResponse)(nil), // 12: cityaqrpc.GriddedConcentrationsResponse
	(*GriddedPopulationRequest)(nil),      // 13: cityaqrpc.GriddedPopulationRequest
	(*GriddedPopulationResponse)(nil),     // 14: cityaqrpc.GriddedPopulationResponse
	(*ImpactSummaryRequest)(nil),          // 15: cityaqrpc.ImpactSummaryRequest
	(*ImpactSummaryResponse)(nil),         // 16: cityaqrpc.ImpactSummaryResponse
	(*EmissionsGridBoundsRequest)(nil),    // 17: cityaqrpc.EmissionsGridBoundsRequest
	(*EmissionsGridBoundsResponse)(nil),   // 18: cityaqrpc.EmissionsGridBoundsResponse
	(*MapScaleRequest)(nil),               // 19: cityaqrpc.MapScaleRequest
	(*MapScaleResponse)(nil),              // 20: cityaqrpc.MapScaleResponse
}
var file_cityaq_proto_depIdxs = []int32{
	6,  // 0: cityaqrpc.CityGeometryResponse.Polygons:type_name -> cityaqrpc.Polygon
	7,  // 1: cityaqrpc.Polygon.Paths:type_name -> cityaqrpc.Path
	8,  // 2: cityaqrpc.Path.Points:type_name -> cityaqrpc.Point
	0,  // 3: cityaqrpc.GriddedEmissionsRequest.Emission:type_name -> cityaqrpc.Emission
	6,  // 4: cityaqrpc.GriddedEmissionsResponse.Polygons:type_name -> cityaqrpc.Polygon
	0,  // 5: cityaqrpc.GriddedConcentrationsRequest.Emission:type_name -> cityaqrpc.Emission
	6,  // 6: cityaqrpc.GriddedConcentrationsResponse.Polygons:type_name -> cityaqrpc.Polygon
	0,  // 7: cityaqrpc.GriddedPopulationRequest.Emission:type_name -> cityaqrpc.Emission
	6,  // 8: cityaqrpc.GriddedPopulationResponse.Polygons:type_name -> cityaqrpc.Polygon
	0,  // 9: cityaqrpc.ImpactSummaryRequest.Emission:type_name -> cityaqrpc.Emission
	8,  // 10: cityaqrpc.EmissionsGridBoundsResponse.Min:type_name -> cityaqrpc.Point
	8,  // 11: cityaqrpc.EmissionsGridBoundsResponse.Max:type_name -> cityaqrpc.Point
	1,  // 12: cityaqrpc.MapScaleRequest.ImpactType:type_name -> cityaqrpc.ImpactType
	0,  // 13: cityaqrpc.MapScaleRequest.Emission:type_name -> cityaqrpc.Emission
	2,  // 14: cityaqrpc.CityAQ.Cities:input_type -> cityaqrpc.CitiesRequest
	4,  // 15: cityaqrpc.CityAQ.CityGeometry:input_type -> cityaqrpc.CityGeometryRequest
	9,  // 16: cityaqrpc.CityAQ.GriddedEmissions:input_type -> cityaqrpc.GriddedEmissionsRequest
	17, // 17: cityaqrpc.CityAQ.EmissionsGridBounds:input_type -> cityaqrpc.EmissionsGridBoundsRequest
	11, // 18: cityaqrpc.CityAQ.GriddedConcentrations:input_type -> cityaqrpc.GriddedConcentrationsRequest
	19, // 19: cityaqrpc.CityAQ.MapScale:input_type -> cityaqrpc.MapScaleRequest
	13, // 20: cityaqrpc.CityAQ.GriddedPopulation:input_type -> cityaqrpc.GriddedPopulationRequest
	15, // 21: cityaqrpc.CityAQ.ImpactSummary:input_type -> cityaqrpc.ImpactSummaryRequest
	3,  // 22: cityaqrpc.CityAQ.Cities:output_type -> cityaqrpc.CitiesResponse
	5,  // 23: cityaqrpc.CityAQ.CityGeometry:output_type -> cityaqrpc.CityGeometryResponse
	10, // 24: cityaqrpc.CityAQ.GriddedEmissions:output_type -> cityaqrpc.GriddedEmissionsResponse
	18, // 25: cityaqrpc.CityAQ.EmissionsGridBounds:output_type -> cityaqrpc.EmissionsGridBoundsResponse
	12, // 26: cityaqrpc.CityAQ.GriddedConcentrations:output_type -> cityaqrpc.GriddedConcentrationsResponse
	20, // 27: cityaqrpc.CityAQ.MapScale:output_type -> cityaqrpc.MapScaleResponse
	14, // 28: cityaqrpc.CityAQ.GriddedPopulation:output_type -> cityaqrpc.GriddedPopulationResponse
	16, // 29: cityaqrpc.CityAQ.ImpactSummary:output_type -> cityaqrpc.ImpactSummaryResponse
	22, // [22:30] is the sub-list for method output_type
	14, // [14:22] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_cityaq_proto_init() }
func file_cityaq_proto_init() {
	if File_cityaq_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cityaq_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cityaq_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cityaq_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityGeometryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cityaq_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityGeometryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cityaq_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Polygon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cityaq_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Path); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cityaq_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cityaq_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GriddedEmissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cityaq_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GriddedEmissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cityaq_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GriddedConcentrationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cityaq_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GriddedConcentrationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cityaq_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GriddedPopulationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cityaq_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GriddedPopulationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cityaq_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImpactSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cityaq_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImpactSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cityaq_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmissionsGridBoundsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cityaq_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmissionsGridBoundsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cityaq_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapScaleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cityaq_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapScaleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cityaq_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cityaq_proto_goTypes,
		DependencyIndexes: file_cityaq_proto_depIdxs,
		EnumInfos:         file_cityaq_proto_enumTypes,
		MessageInfos:      file_cityaq_proto_msgTypes,
	}.Build()
	File_cityaq_proto = out.File
	file_cityaq_proto_rawDesc = nil
	file_cityaq_proto_goTypes = nil
	file_cityaq_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CityAQClient is the client API for CityAQ service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CityAQClient interface {
	// Cities returns the available cities.
	Cities(ctx context.Context, in *CitiesRequest, opts ...grpc.CallOption) (*CitiesResponse, error)
	// CityGeometry returns the boundary of the specified city.
	CityGeometry(ctx context.Context, in *CityGeometryRequest, opts ...grpc.CallOption) (*CityGeometryResponse, error)
	// GriddedEmissions returns the distribution within the city of
	// 1 kilotonne of emissions.
	GriddedEmissions(ctx context.Context, in *GriddedEmissionsRequest, opts ...grpc.CallOption) (*GriddedEmissionsResponse, error)
	// EmissionsGridBounds returns the bounds of the grid used in GriddedEmissions.
	EmissionsGridBounds(ctx context.Context, in *EmissionsGridBoundsRequest, opts ...grpc.CallOption) (*EmissionsGridBoundsResponse, error)
	// GriddedConcentrations returns the concentrations resulting from the
	// corresponding GriddedEmissions.
	GriddedConcentrations(ctx context.Context, in *GriddedConcentrationsRequest, opts ...grpc.CallOption) (*GriddedConcentrationsResponse, error)
	// MapScale returns the minimum and maximum values of the result
	// of the given request.
	MapScale(ctx context.Context, in *MapScaleRequest, opts ...grpc.CallOption) (*MapScaleResponse, error)
	// GriddedPopulation returns the population counts---gridded to the
	// concentration grid---associated with the given request.
	GriddedPopulation(ctx context.Context, in *GriddedPopulationRequest, opts ...grpc.CallOption) (*GriddedPopulationResponse, error)
	// ImpactSummary returns a summary of the impacts from the given request.
	ImpactSummary(ctx context.Context, in *ImpactSummaryRequest, opts ...grpc.CallOption) (*ImpactSummaryResponse, error)
}

type cityAQClient struct {
	cc grpc.ClientConnInterface
}

func NewCityAQClient(cc grpc.ClientConnInterface) CityAQClient {
	return &cityAQClient{cc}
}

func (c *cityAQClient) Cities(ctx context.Context, in *CitiesRequest, opts ...grpc.CallOption) (*CitiesResponse, error) {
	out := new(CitiesResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/Cities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) CityGeometry(ctx context.Context, in *CityGeometryRequest, opts ...grpc.CallOption) (*CityGeometryResponse, error) {
	out := new(CityGeometryResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/CityGeometry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) GriddedEmissions(ctx context.Context, in *GriddedEmissionsRequest, opts ...grpc.CallOption) (*GriddedEmissionsResponse, error) {
	out := new(GriddedEmissionsResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/GriddedEmissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) EmissionsGridBounds(ctx context.Context, in *EmissionsGridBoundsRequest, opts ...grpc.CallOption) (*EmissionsGridBoundsResponse, error) {
	out := new(EmissionsGridBoundsResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/EmissionsGridBounds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) GriddedConcentrations(ctx context.Context, in *GriddedConcentrationsRequest, opts ...grpc.CallOption) (*GriddedConcentrationsResponse, error) {
	out := new(GriddedConcentrationsResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/GriddedConcentrations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) MapScale(ctx context.Context, in *MapScaleRequest, opts ...grpc.CallOption) (*MapScaleResponse, error) {
	out := new(MapScaleResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/MapScale", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) GriddedPopulation(ctx context.Context, in *GriddedPopulationRequest, opts ...grpc.CallOption) (*GriddedPopulationResponse, error) {
	out := new(GriddedPopulationResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/GriddedPopulation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) ImpactSummary(ctx context.Context, in *ImpactSummaryRequest, opts ...grpc.CallOption) (*ImpactSummaryResponse, error) {
	out := new(ImpactSummaryResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/ImpactSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CityAQServer is the server API for CityAQ service.
type CityAQServer interface {
	// Cities returns the available cities.
	Cities(context.Context, *CitiesRequest) (*CitiesResponse, error)
	// CityGeometry returns the boundary of the specified city.
	CityGeometry(context.Context, *CityGeometryRequest) (*CityGeometryResponse, error)
	// GriddedEmissions returns the distribution within the city of
	// 1 kilotonne of emissions.
	GriddedEmissions(context.Context, *GriddedEmissionsRequest) (*GriddedEmissionsResponse, error)
	// EmissionsGridBounds returns the bounds of the grid used in GriddedEmissions.
	EmissionsGridBounds(context.Context, *EmissionsGridBoundsRequest) (*EmissionsGridBoundsResponse, error)
	// GriddedConcentrations returns the concentrations resulting from the
	// corresponding GriddedEmissions.
	GriddedConcentrations(context.Context, *GriddedConcentrationsRequest) (*GriddedConcentrationsResponse, error)
	// MapScale returns the minimum and maximum values of the result
	// of the given request.
	MapScale(context.Context, *MapScaleRequest) (*MapScaleResponse, error)
	// GriddedPopulation returns the population counts---gridded to the
	// concentration grid---associated with the given request.
	GriddedPopulation(context.Context, *GriddedPopulationRequest) (*GriddedPopulationResponse, error)
	// ImpactSummary returns a summary of the impacts from the given request.
	ImpactSummary(context.Context, *ImpactSummaryRequest) (*ImpactSummaryResponse, error)
}

// UnimplementedCityAQServer can be embedded to have forward compatible implementations.
type UnimplementedCityAQServer struct {
}

func (*UnimplementedCityAQServer) Cities(context.Context, *CitiesRequest) (*CitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Cities not implemented")
}
func (*UnimplementedCityAQServer) CityGeometry(context.Context, *CityGeometryRequest) (*CityGeometryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CityGeometry not implemented")
}
func (*UnimplementedCityAQServer) GriddedEmissions(context.Context, *GriddedEmissionsRequest) (*GriddedEmissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GriddedEmissions not implemented")
}
func (*UnimplementedCityAQServer) EmissionsGridBounds(context.Context, *EmissionsGridBoundsRequest) (*EmissionsGridBoundsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EmissionsGridBounds not implemented")
}
func (*UnimplementedCityAQServer) GriddedConcentrations(context.Context, *GriddedConcentrationsRequest) (*GriddedConcentrationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GriddedConcentrations not implemented")
}
func (*UnimplementedCityAQServer) MapScale(context.Context, *MapScaleRequest) (*MapScaleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MapScale not implemented")
}
func (*UnimplementedCityAQServer) GriddedPopulation(context.Context, *GriddedPopulationRequest) (*GriddedPopulationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GriddedPopulation not implemented")
}
func (*UnimplementedCityAQServer) ImpactSummary(context.Context, *ImpactSummaryRequest) (*ImpactSummaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImpactSummary not implemented")
}

func RegisterCityAQServer(s *grpc.Server, srv CityAQServer) {
	s.RegisterService(&_CityAQ_serviceDesc, srv)
}

func _CityAQ_Cities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).Cities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/Cities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).Cities(ctx, req.(*CitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_CityGeometry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CityGeometryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).CityGeometry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/CityGeometry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).CityGeometry(ctx, req.(*CityGeometryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_GriddedEmissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GriddedEmissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).GriddedEmissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/GriddedEmissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).GriddedEmissions(ctx, req.(*GriddedEmissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_EmissionsGridBounds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmissionsGridBoundsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).EmissionsGridBounds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/EmissionsGridBounds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).EmissionsGridBounds(ctx, req.(*EmissionsGridBoundsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_GriddedConcentrations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GriddedConcentrationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).GriddedConcentrations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/GriddedConcentrations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).GriddedConcentrations(ctx, req.(*GriddedConcentrationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_MapScale_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MapScaleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).MapScale(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/MapScale",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).MapScale(ctx, req.(*MapScaleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_GriddedPopulation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GriddedPopulationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).GriddedPopulation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/GriddedPopulation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).GriddedPopulation(ctx, req.(*GriddedPopulationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_ImpactSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImpactSummaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).ImpactSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/ImpactSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).ImpactSummary(ctx, req.(*ImpactSummaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CityAQ_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cityaqrpc.CityAQ",
	HandlerType: (*CityAQServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Cities",
			Handler:    _CityAQ_Cities_Handler,
		},
		{
			MethodName: "CityGeometry",
			Handler:    _CityAQ_CityGeometry_Handler,
		},
		{
			MethodName: "GriddedEmissions",
			Handler:    _CityAQ_GriddedEmissions_Handler,
		},
		{
			MethodName: "EmissionsGridBounds",
			Handler:    _CityAQ_EmissionsGridBounds_Handler,
		},
		{
			MethodName: "GriddedConcentrations",
			Handler:    _CityAQ_GriddedConcentrations_Handler,
		},
		{
			MethodName: "MapScale",
			Handler:    _CityAQ_MapScale_Handler,
		},
		{
			MethodName: "GriddedPopulation",
			Handler:    _CityAQ_GriddedPopulation_Handler,
		},
		{
			MethodName: "ImpactSummary",
			Handler:    _CityAQ_ImpactSummary_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cityaq.proto",
}
