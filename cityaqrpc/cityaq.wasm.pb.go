// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cityaq.proto

//+build js

package cityaqrpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "github.com/johanbrandhorst/grpc-wasm"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Emission int32

const (
	Emission_UNKNOWN_EMISSION Emission = 0
	Emission_PM2_5            Emission = 1
	Emission_NH3              Emission = 2
	Emission_NOx              Emission = 3
	Emission_SOx              Emission = 4
	Emission_VOC              Emission = 5
)

var Emission_name = map[int32]string{
	0: "UNKNOWN_EMISSION",
	1: "PM2_5",
	2: "NH3",
	3: "NOx",
	4: "SOx",
	5: "VOC",
}
var Emission_value = map[string]int32{
	"UNKNOWN_EMISSION": 0,
	"PM2_5":            1,
	"NH3":              2,
	"NOx":              3,
	"SOx":              4,
	"VOC":              5,
}

func (x Emission) String() string {
	return proto.EnumName(Emission_name, int32(x))
}
func (Emission) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{0}
}

type ImpactType int32

const (
	ImpactType_UNKNOWN_IMPACTTYPE ImpactType = 0
	ImpactType_Emissions          ImpactType = 1
	ImpactType_Concentrations     ImpactType = 2
)

var ImpactType_name = map[int32]string{
	0: "UNKNOWN_IMPACTTYPE",
	1: "Emissions",
	2: "Concentrations",
}
var ImpactType_value = map[string]int32{
	"UNKNOWN_IMPACTTYPE": 0,
	"Emissions":          1,
	"Concentrations":     2,
}

func (x ImpactType) String() string {
	return proto.EnumName(ImpactType_name, int32(x))
}
func (ImpactType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{1}
}

type SimulationType int32

const (
	SimulationType_UNKNOWN_SIMULATIONTYPE SimulationType = 0
	SimulationType_Total                  SimulationType = 1
	SimulationType_CityTotal              SimulationType = 2
	SimulationType_CityMarginal           SimulationType = 3
)

var SimulationType_name = map[int32]string{
	0: "UNKNOWN_SIMULATIONTYPE",
	1: "Total",
	2: "CityTotal",
	3: "CityMarginal",
}
var SimulationType_value = map[string]int32{
	"UNKNOWN_SIMULATIONTYPE": 0,
	"Total":                  1,
	"CityTotal":              2,
	"CityMarginal":           3,
}

func (x SimulationType) String() string {
	return proto.EnumName(SimulationType_name, int32(x))
}
func (SimulationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{2}
}

type CitiesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CitiesRequest) Reset()         { *m = CitiesRequest{} }
func (m *CitiesRequest) String() string { return proto.CompactTextString(m) }
func (*CitiesRequest) ProtoMessage()    {}
func (*CitiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{0}
}
func (m *CitiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CitiesRequest.Unmarshal(m, b)
}
func (m *CitiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CitiesRequest.Marshal(b, m, deterministic)
}
func (dst *CitiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CitiesRequest.Merge(dst, src)
}
func (m *CitiesRequest) XXX_Size() int {
	return xxx_messageInfo_CitiesRequest.Size(m)
}
func (m *CitiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CitiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CitiesRequest proto.InternalMessageInfo

type CitiesResponse struct {
	// The names of the cities
	Names                []string `protobuf:"bytes,1,rep,name=Names,proto3" json:"Names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CitiesResponse) Reset()         { *m = CitiesResponse{} }
func (m *CitiesResponse) String() string { return proto.CompactTextString(m) }
func (*CitiesResponse) ProtoMessage()    {}
func (*CitiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{1}
}
func (m *CitiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CitiesResponse.Unmarshal(m, b)
}
func (m *CitiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CitiesResponse.Marshal(b, m, deterministic)
}
func (dst *CitiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CitiesResponse.Merge(dst, src)
}
func (m *CitiesResponse) XXX_Size() int {
	return xxx_messageInfo_CitiesResponse.Size(m)
}
func (m *CitiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CitiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CitiesResponse proto.InternalMessageInfo

func (m *CitiesResponse) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

type CityGeometryRequest struct {
	CityName             string   `protobuf:"bytes,1,opt,name=CityName,proto3" json:"CityName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CityGeometryRequest) Reset()         { *m = CityGeometryRequest{} }
func (m *CityGeometryRequest) String() string { return proto.CompactTextString(m) }
func (*CityGeometryRequest) ProtoMessage()    {}
func (*CityGeometryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{2}
}
func (m *CityGeometryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CityGeometryRequest.Unmarshal(m, b)
}
func (m *CityGeometryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CityGeometryRequest.Marshal(b, m, deterministic)
}
func (dst *CityGeometryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CityGeometryRequest.Merge(dst, src)
}
func (m *CityGeometryRequest) XXX_Size() int {
	return xxx_messageInfo_CityGeometryRequest.Size(m)
}
func (m *CityGeometryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CityGeometryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CityGeometryRequest proto.InternalMessageInfo

func (m *CityGeometryRequest) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

type CityGeometryResponse struct {
	Polygons             []*Polygon `protobuf:"bytes,1,rep,name=Polygons,proto3" json:"Polygons,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CityGeometryResponse) Reset()         { *m = CityGeometryResponse{} }
func (m *CityGeometryResponse) String() string { return proto.CompactTextString(m) }
func (*CityGeometryResponse) ProtoMessage()    {}
func (*CityGeometryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{3}
}
func (m *CityGeometryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CityGeometryResponse.Unmarshal(m, b)
}
func (m *CityGeometryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CityGeometryResponse.Marshal(b, m, deterministic)
}
func (dst *CityGeometryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CityGeometryResponse.Merge(dst, src)
}
func (m *CityGeometryResponse) XXX_Size() int {
	return xxx_messageInfo_CityGeometryResponse.Size(m)
}
func (m *CityGeometryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CityGeometryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CityGeometryResponse proto.InternalMessageInfo

func (m *CityGeometryResponse) GetPolygons() []*Polygon {
	if m != nil {
		return m.Polygons
	}
	return nil
}

type Polygon struct {
	Paths                []*Path  `protobuf:"bytes,1,rep,name=Paths,proto3" json:"Paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Polygon) Reset()         { *m = Polygon{} }
func (m *Polygon) String() string { return proto.CompactTextString(m) }
func (*Polygon) ProtoMessage()    {}
func (*Polygon) Descriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{4}
}
func (m *Polygon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Polygon.Unmarshal(m, b)
}
func (m *Polygon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Polygon.Marshal(b, m, deterministic)
}
func (dst *Polygon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Polygon.Merge(dst, src)
}
func (m *Polygon) XXX_Size() int {
	return xxx_messageInfo_Polygon.Size(m)
}
func (m *Polygon) XXX_DiscardUnknown() {
	xxx_messageInfo_Polygon.DiscardUnknown(m)
}

var xxx_messageInfo_Polygon proto.InternalMessageInfo

func (m *Polygon) GetPaths() []*Path {
	if m != nil {
		return m.Paths
	}
	return nil
}

type Path struct {
	Points               []*Point `protobuf:"bytes,1,rep,name=Points,proto3" json:"Points,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Path) Reset()         { *m = Path{} }
func (m *Path) String() string { return proto.CompactTextString(m) }
func (*Path) ProtoMessage()    {}
func (*Path) Descriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{5}
}
func (m *Path) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Path.Unmarshal(m, b)
}
func (m *Path) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Path.Marshal(b, m, deterministic)
}
func (dst *Path) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Path.Merge(dst, src)
}
func (m *Path) XXX_Size() int {
	return xxx_messageInfo_Path.Size(m)
}
func (m *Path) XXX_DiscardUnknown() {
	xxx_messageInfo_Path.DiscardUnknown(m)
}

var xxx_messageInfo_Path proto.InternalMessageInfo

func (m *Path) GetPoints() []*Point {
	if m != nil {
		return m.Points
	}
	return nil
}

type Point struct {
	X                    float64  `protobuf:"fixed64,1,opt,name=X,proto3" json:"X,omitempty"`
	Y                    float64  `protobuf:"fixed64,2,opt,name=Y,proto3" json:"Y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Point) Reset()         { *m = Point{} }
func (m *Point) String() string { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()    {}
func (*Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{6}
}
func (m *Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Point.Unmarshal(m, b)
}
func (m *Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Point.Marshal(b, m, deterministic)
}
func (dst *Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Point.Merge(dst, src)
}
func (m *Point) XXX_Size() int {
	return xxx_messageInfo_Point.Size(m)
}
func (m *Point) XXX_DiscardUnknown() {
	xxx_messageInfo_Point.DiscardUnknown(m)
}

var xxx_messageInfo_Point proto.InternalMessageInfo

func (m *Point) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Point) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

type GriddedEmissionsRequest struct {
	CityName             string         `protobuf:"bytes,1,opt,name=CityName,proto3" json:"CityName,omitempty"`
	SourceType           string         `protobuf:"bytes,2,opt,name=SourceType,proto3" json:"SourceType,omitempty"`
	Emission             Emission       `protobuf:"varint,3,opt,name=Emission,proto3,enum=cityaqrpc.Emission" json:"Emission,omitempty"`
	SimulationType       SimulationType `protobuf:"varint,4,opt,name=SimulationType,proto3,enum=cityaqrpc.SimulationType" json:"SimulationType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GriddedEmissionsRequest) Reset()         { *m = GriddedEmissionsRequest{} }
func (m *GriddedEmissionsRequest) String() string { return proto.CompactTextString(m) }
func (*GriddedEmissionsRequest) ProtoMessage()    {}
func (*GriddedEmissionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{7}
}
func (m *GriddedEmissionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GriddedEmissionsRequest.Unmarshal(m, b)
}
func (m *GriddedEmissionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GriddedEmissionsRequest.Marshal(b, m, deterministic)
}
func (dst *GriddedEmissionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GriddedEmissionsRequest.Merge(dst, src)
}
func (m *GriddedEmissionsRequest) XXX_Size() int {
	return xxx_messageInfo_GriddedEmissionsRequest.Size(m)
}
func (m *GriddedEmissionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GriddedEmissionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GriddedEmissionsRequest proto.InternalMessageInfo

func (m *GriddedEmissionsRequest) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

func (m *GriddedEmissionsRequest) GetSourceType() string {
	if m != nil {
		return m.SourceType
	}
	return ""
}

func (m *GriddedEmissionsRequest) GetEmission() Emission {
	if m != nil {
		return m.Emission
	}
	return Emission_UNKNOWN_EMISSION
}

func (m *GriddedEmissionsRequest) GetSimulationType() SimulationType {
	if m != nil {
		return m.SimulationType
	}
	return SimulationType_UNKNOWN_SIMULATIONTYPE
}

type GriddedEmissionsResponse struct {
	Polygons             []*Polygon `protobuf:"bytes,1,rep,name=Polygons,proto3" json:"Polygons,omitempty"`
	Emissions            []float64  `protobuf:"fixed64,2,rep,packed,name=Emissions,proto3" json:"Emissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GriddedEmissionsResponse) Reset()         { *m = GriddedEmissionsResponse{} }
func (m *GriddedEmissionsResponse) String() string { return proto.CompactTextString(m) }
func (*GriddedEmissionsResponse) ProtoMessage()    {}
func (*GriddedEmissionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{8}
}
func (m *GriddedEmissionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GriddedEmissionsResponse.Unmarshal(m, b)
}
func (m *GriddedEmissionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GriddedEmissionsResponse.Marshal(b, m, deterministic)
}
func (dst *GriddedEmissionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GriddedEmissionsResponse.Merge(dst, src)
}
func (m *GriddedEmissionsResponse) XXX_Size() int {
	return xxx_messageInfo_GriddedEmissionsResponse.Size(m)
}
func (m *GriddedEmissionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GriddedEmissionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GriddedEmissionsResponse proto.InternalMessageInfo

func (m *GriddedEmissionsResponse) GetPolygons() []*Polygon {
	if m != nil {
		return m.Polygons
	}
	return nil
}

func (m *GriddedEmissionsResponse) GetEmissions() []float64 {
	if m != nil {
		return m.Emissions
	}
	return nil
}

type GriddedConcentrationsRequest struct {
	CityName             string         `protobuf:"bytes,1,opt,name=CityName,proto3" json:"CityName,omitempty"`
	SourceType           string         `protobuf:"bytes,2,opt,name=SourceType,proto3" json:"SourceType,omitempty"`
	Emission             Emission       `protobuf:"varint,3,opt,name=Emission,proto3,enum=cityaqrpc.Emission" json:"Emission,omitempty"`
	SimulationType       SimulationType `protobuf:"varint,4,opt,name=SimulationType,proto3,enum=cityaqrpc.SimulationType" json:"SimulationType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GriddedConcentrationsRequest) Reset()         { *m = GriddedConcentrationsRequest{} }
func (m *GriddedConcentrationsRequest) String() string { return proto.CompactTextString(m) }
func (*GriddedConcentrationsRequest) ProtoMessage()    {}
func (*GriddedConcentrationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{9}
}
func (m *GriddedConcentrationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GriddedConcentrationsRequest.Unmarshal(m, b)
}
func (m *GriddedConcentrationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GriddedConcentrationsRequest.Marshal(b, m, deterministic)
}
func (dst *GriddedConcentrationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GriddedConcentrationsRequest.Merge(dst, src)
}
func (m *GriddedConcentrationsRequest) XXX_Size() int {
	return xxx_messageInfo_GriddedConcentrationsRequest.Size(m)
}
func (m *GriddedConcentrationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GriddedConcentrationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GriddedConcentrationsRequest proto.InternalMessageInfo

func (m *GriddedConcentrationsRequest) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

func (m *GriddedConcentrationsRequest) GetSourceType() string {
	if m != nil {
		return m.SourceType
	}
	return ""
}

func (m *GriddedConcentrationsRequest) GetEmission() Emission {
	if m != nil {
		return m.Emission
	}
	return Emission_UNKNOWN_EMISSION
}

func (m *GriddedConcentrationsRequest) GetSimulationType() SimulationType {
	if m != nil {
		return m.SimulationType
	}
	return SimulationType_UNKNOWN_SIMULATIONTYPE
}

type GriddedConcentrationsResponse struct {
	Polygons             []*Polygon `protobuf:"bytes,1,rep,name=Polygons,proto3" json:"Polygons,omitempty"`
	Concentrations       []float64  `protobuf:"fixed64,2,rep,packed,name=Concentrations,proto3" json:"Concentrations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GriddedConcentrationsResponse) Reset()         { *m = GriddedConcentrationsResponse{} }
func (m *GriddedConcentrationsResponse) String() string { return proto.CompactTextString(m) }
func (*GriddedConcentrationsResponse) ProtoMessage()    {}
func (*GriddedConcentrationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{10}
}
func (m *GriddedConcentrationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GriddedConcentrationsResponse.Unmarshal(m, b)
}
func (m *GriddedConcentrationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GriddedConcentrationsResponse.Marshal(b, m, deterministic)
}
func (dst *GriddedConcentrationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GriddedConcentrationsResponse.Merge(dst, src)
}
func (m *GriddedConcentrationsResponse) XXX_Size() int {
	return xxx_messageInfo_GriddedConcentrationsResponse.Size(m)
}
func (m *GriddedConcentrationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GriddedConcentrationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GriddedConcentrationsResponse proto.InternalMessageInfo

func (m *GriddedConcentrationsResponse) GetPolygons() []*Polygon {
	if m != nil {
		return m.Polygons
	}
	return nil
}

func (m *GriddedConcentrationsResponse) GetConcentrations() []float64 {
	if m != nil {
		return m.Concentrations
	}
	return nil
}

type GriddedPopulationRequest struct {
	CityName             string         `protobuf:"bytes,1,opt,name=CityName,proto3" json:"CityName,omitempty"`
	SourceType           string         `protobuf:"bytes,2,opt,name=SourceType,proto3" json:"SourceType,omitempty"`
	Emission             Emission       `protobuf:"varint,3,opt,name=Emission,proto3,enum=cityaqrpc.Emission" json:"Emission,omitempty"`
	SimulationType       SimulationType `protobuf:"varint,4,opt,name=SimulationType,proto3,enum=cityaqrpc.SimulationType" json:"SimulationType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GriddedPopulationRequest) Reset()         { *m = GriddedPopulationRequest{} }
func (m *GriddedPopulationRequest) String() string { return proto.CompactTextString(m) }
func (*GriddedPopulationRequest) ProtoMessage()    {}
func (*GriddedPopulationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{11}
}
func (m *GriddedPopulationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GriddedPopulationRequest.Unmarshal(m, b)
}
func (m *GriddedPopulationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GriddedPopulationRequest.Marshal(b, m, deterministic)
}
func (dst *GriddedPopulationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GriddedPopulationRequest.Merge(dst, src)
}
func (m *GriddedPopulationRequest) XXX_Size() int {
	return xxx_messageInfo_GriddedPopulationRequest.Size(m)
}
func (m *GriddedPopulationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GriddedPopulationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GriddedPopulationRequest proto.InternalMessageInfo

func (m *GriddedPopulationRequest) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

func (m *GriddedPopulationRequest) GetSourceType() string {
	if m != nil {
		return m.SourceType
	}
	return ""
}

func (m *GriddedPopulationRequest) GetEmission() Emission {
	if m != nil {
		return m.Emission
	}
	return Emission_UNKNOWN_EMISSION
}

func (m *GriddedPopulationRequest) GetSimulationType() SimulationType {
	if m != nil {
		return m.SimulationType
	}
	return SimulationType_UNKNOWN_SIMULATIONTYPE
}

type GriddedPopulationResponse struct {
	Polygons             []*Polygon `protobuf:"bytes,1,rep,name=Polygons,proto3" json:"Polygons,omitempty"`
	Population           []float64  `protobuf:"fixed64,2,rep,packed,name=Population,proto3" json:"Population,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GriddedPopulationResponse) Reset()         { *m = GriddedPopulationResponse{} }
func (m *GriddedPopulationResponse) String() string { return proto.CompactTextString(m) }
func (*GriddedPopulationResponse) ProtoMessage()    {}
func (*GriddedPopulationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{12}
}
func (m *GriddedPopulationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GriddedPopulationResponse.Unmarshal(m, b)
}
func (m *GriddedPopulationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GriddedPopulationResponse.Marshal(b, m, deterministic)
}
func (dst *GriddedPopulationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GriddedPopulationResponse.Merge(dst, src)
}
func (m *GriddedPopulationResponse) XXX_Size() int {
	return xxx_messageInfo_GriddedPopulationResponse.Size(m)
}
func (m *GriddedPopulationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GriddedPopulationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GriddedPopulationResponse proto.InternalMessageInfo

func (m *GriddedPopulationResponse) GetPolygons() []*Polygon {
	if m != nil {
		return m.Polygons
	}
	return nil
}

func (m *GriddedPopulationResponse) GetPopulation() []float64 {
	if m != nil {
		return m.Population
	}
	return nil
}

type ImpactSummaryRequest struct {
	CityName             string         `protobuf:"bytes,1,opt,name=CityName,proto3" json:"CityName,omitempty"`
	SourceType           string         `protobuf:"bytes,2,opt,name=SourceType,proto3" json:"SourceType,omitempty"`
	Emission             Emission       `protobuf:"varint,3,opt,name=Emission,proto3,enum=cityaqrpc.Emission" json:"Emission,omitempty"`
	SimulationType       SimulationType `protobuf:"varint,4,opt,name=SimulationType,proto3,enum=cityaqrpc.SimulationType" json:"SimulationType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ImpactSummaryRequest) Reset()         { *m = ImpactSummaryRequest{} }
func (m *ImpactSummaryRequest) String() string { return proto.CompactTextString(m) }
func (*ImpactSummaryRequest) ProtoMessage()    {}
func (*ImpactSummaryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{13}
}
func (m *ImpactSummaryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImpactSummaryRequest.Unmarshal(m, b)
}
func (m *ImpactSummaryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImpactSummaryRequest.Marshal(b, m, deterministic)
}
func (dst *ImpactSummaryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImpactSummaryRequest.Merge(dst, src)
}
func (m *ImpactSummaryRequest) XXX_Size() int {
	return xxx_messageInfo_ImpactSummaryRequest.Size(m)
}
func (m *ImpactSummaryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImpactSummaryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImpactSummaryRequest proto.InternalMessageInfo

func (m *ImpactSummaryRequest) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

func (m *ImpactSummaryRequest) GetSourceType() string {
	if m != nil {
		return m.SourceType
	}
	return ""
}

func (m *ImpactSummaryRequest) GetEmission() Emission {
	if m != nil {
		return m.Emission
	}
	return Emission_UNKNOWN_EMISSION
}

func (m *ImpactSummaryRequest) GetSimulationType() SimulationType {
	if m != nil {
		return m.SimulationType
	}
	return SimulationType_UNKNOWN_SIMULATIONTYPE
}

type ImpactSummaryResponse struct {
	// Population is the total population.
	Population float64 `protobuf:"fixed64,1,opt,name=Population,proto3" json:"Population,omitempty"`
	// CityPopulation is the total population in the city.
	CityPopulation float64 `protobuf:"fixed64,2,opt,name=CityPopulation,proto3" json:"CityPopulation,omitempty"`
	// CityExposure is the population-weighted average
	// concentration in the city.
	CityExposure float64 `protobuf:"fixed64,3,opt,name=CityExposure,proto3" json:"CityExposure,omitempty"`
	// TotalExposure is the overall population-weighted average
	// concentration.
	TotalExposure float64 `protobuf:"fixed64,4,opt,name=TotalExposure,proto3" json:"TotalExposure,omitempty"`
	// CityIF is the intake fraction in the city.
	CityIF float64 `protobuf:"fixed64,5,opt,name=CityIF,proto3" json:"CityIF,omitempty"`
	// TotalIF is the total intake fraction.
	TotalIF              float64  `protobuf:"fixed64,6,opt,name=TotalIF,proto3" json:"TotalIF,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImpactSummaryResponse) Reset()         { *m = ImpactSummaryResponse{} }
func (m *ImpactSummaryResponse) String() string { return proto.CompactTextString(m) }
func (*ImpactSummaryResponse) ProtoMessage()    {}
func (*ImpactSummaryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{14}
}
func (m *ImpactSummaryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImpactSummaryResponse.Unmarshal(m, b)
}
func (m *ImpactSummaryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImpactSummaryResponse.Marshal(b, m, deterministic)
}
func (dst *ImpactSummaryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImpactSummaryResponse.Merge(dst, src)
}
func (m *ImpactSummaryResponse) XXX_Size() int {
	return xxx_messageInfo_ImpactSummaryResponse.Size(m)
}
func (m *ImpactSummaryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImpactSummaryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImpactSummaryResponse proto.InternalMessageInfo

func (m *ImpactSummaryResponse) GetPopulation() float64 {
	if m != nil {
		return m.Population
	}
	return 0
}

func (m *ImpactSummaryResponse) GetCityPopulation() float64 {
	if m != nil {
		return m.CityPopulation
	}
	return 0
}

func (m *ImpactSummaryResponse) GetCityExposure() float64 {
	if m != nil {
		return m.CityExposure
	}
	return 0
}

func (m *ImpactSummaryResponse) GetTotalExposure() float64 {
	if m != nil {
		return m.TotalExposure
	}
	return 0
}

func (m *ImpactSummaryResponse) GetCityIF() float64 {
	if m != nil {
		return m.CityIF
	}
	return 0
}

func (m *ImpactSummaryResponse) GetTotalIF() float64 {
	if m != nil {
		return m.TotalIF
	}
	return 0
}

type EmissionsGridBoundsRequest struct {
	CityName             string   `protobuf:"bytes,1,opt,name=CityName,proto3" json:"CityName,omitempty"`
	SourceType           string   `protobuf:"bytes,2,opt,name=SourceType,proto3" json:"SourceType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmissionsGridBoundsRequest) Reset()         { *m = EmissionsGridBoundsRequest{} }
func (m *EmissionsGridBoundsRequest) String() string { return proto.CompactTextString(m) }
func (*EmissionsGridBoundsRequest) ProtoMessage()    {}
func (*EmissionsGridBoundsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{15}
}
func (m *EmissionsGridBoundsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmissionsGridBoundsRequest.Unmarshal(m, b)
}
func (m *EmissionsGridBoundsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmissionsGridBoundsRequest.Marshal(b, m, deterministic)
}
func (dst *EmissionsGridBoundsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmissionsGridBoundsRequest.Merge(dst, src)
}
func (m *EmissionsGridBoundsRequest) XXX_Size() int {
	return xxx_messageInfo_EmissionsGridBoundsRequest.Size(m)
}
func (m *EmissionsGridBoundsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmissionsGridBoundsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmissionsGridBoundsRequest proto.InternalMessageInfo

func (m *EmissionsGridBoundsRequest) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

func (m *EmissionsGridBoundsRequest) GetSourceType() string {
	if m != nil {
		return m.SourceType
	}
	return ""
}

type EmissionsGridBoundsResponse struct {
	Min                  *Point   `protobuf:"bytes,1,opt,name=Min,proto3" json:"Min,omitempty"`
	Max                  *Point   `protobuf:"bytes,2,opt,name=Max,proto3" json:"Max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmissionsGridBoundsResponse) Reset()         { *m = EmissionsGridBoundsResponse{} }
func (m *EmissionsGridBoundsResponse) String() string { return proto.CompactTextString(m) }
func (*EmissionsGridBoundsResponse) ProtoMessage()    {}
func (*EmissionsGridBoundsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{16}
}
func (m *EmissionsGridBoundsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmissionsGridBoundsResponse.Unmarshal(m, b)
}
func (m *EmissionsGridBoundsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmissionsGridBoundsResponse.Marshal(b, m, deterministic)
}
func (dst *EmissionsGridBoundsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmissionsGridBoundsResponse.Merge(dst, src)
}
func (m *EmissionsGridBoundsResponse) XXX_Size() int {
	return xxx_messageInfo_EmissionsGridBoundsResponse.Size(m)
}
func (m *EmissionsGridBoundsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EmissionsGridBoundsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EmissionsGridBoundsResponse proto.InternalMessageInfo

func (m *EmissionsGridBoundsResponse) GetMin() *Point {
	if m != nil {
		return m.Min
	}
	return nil
}

func (m *EmissionsGridBoundsResponse) GetMax() *Point {
	if m != nil {
		return m.Max
	}
	return nil
}

type EmissionsInventorySectorsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmissionsInventorySectorsRequest) Reset()         { *m = EmissionsInventorySectorsRequest{} }
func (m *EmissionsInventorySectorsRequest) String() string { return proto.CompactTextString(m) }
func (*EmissionsInventorySectorsRequest) ProtoMessage()    {}
func (*EmissionsInventorySectorsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{17}
}
func (m *EmissionsInventorySectorsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmissionsInventorySectorsRequest.Unmarshal(m, b)
}
func (m *EmissionsInventorySectorsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmissionsInventorySectorsRequest.Marshal(b, m, deterministic)
}
func (dst *EmissionsInventorySectorsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmissionsInventorySectorsRequest.Merge(dst, src)
}
func (m *EmissionsInventorySectorsRequest) XXX_Size() int {
	return xxx_messageInfo_EmissionsInventorySectorsRequest.Size(m)
}
func (m *EmissionsInventorySectorsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmissionsInventorySectorsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmissionsInventorySectorsRequest proto.InternalMessageInfo

type EmissionsInventorySectorsResponse struct {
	Sectors              []string `protobuf:"bytes,1,rep,name=Sectors,proto3" json:"Sectors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmissionsInventorySectorsResponse) Reset()         { *m = EmissionsInventorySectorsResponse{} }
func (m *EmissionsInventorySectorsResponse) String() string { return proto.CompactTextString(m) }
func (*EmissionsInventorySectorsResponse) ProtoMessage()    {}
func (*EmissionsInventorySectorsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{18}
}
func (m *EmissionsInventorySectorsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmissionsInventorySectorsResponse.Unmarshal(m, b)
}
func (m *EmissionsInventorySectorsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmissionsInventorySectorsResponse.Marshal(b, m, deterministic)
}
func (dst *EmissionsInventorySectorsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmissionsInventorySectorsResponse.Merge(dst, src)
}
func (m *EmissionsInventorySectorsResponse) XXX_Size() int {
	return xxx_messageInfo_EmissionsInventorySectorsResponse.Size(m)
}
func (m *EmissionsInventorySectorsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EmissionsInventorySectorsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EmissionsInventorySectorsResponse proto.InternalMessageInfo

func (m *EmissionsInventorySectorsResponse) GetSectors() []string {
	if m != nil {
		return m.Sectors
	}
	return nil
}

type MapScaleRequest struct {
	CityName             string         `protobuf:"bytes,1,opt,name=CityName,proto3" json:"CityName,omitempty"`
	ImpactType           ImpactType     `protobuf:"varint,2,opt,name=ImpactType,proto3,enum=cityaqrpc.ImpactType" json:"ImpactType,omitempty"`
	Emission             Emission       `protobuf:"varint,3,opt,name=Emission,proto3,enum=cityaqrpc.Emission" json:"Emission,omitempty"`
	SourceType           string         `protobuf:"bytes,4,opt,name=SourceType,proto3" json:"SourceType,omitempty"`
	SimulationType       SimulationType `protobuf:"varint,5,opt,name=SimulationType,proto3,enum=cityaqrpc.SimulationType" json:"SimulationType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MapScaleRequest) Reset()         { *m = MapScaleRequest{} }
func (m *MapScaleRequest) String() string { return proto.CompactTextString(m) }
func (*MapScaleRequest) ProtoMessage()    {}
func (*MapScaleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{19}
}
func (m *MapScaleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MapScaleRequest.Unmarshal(m, b)
}
func (m *MapScaleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MapScaleRequest.Marshal(b, m, deterministic)
}
func (dst *MapScaleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MapScaleRequest.Merge(dst, src)
}
func (m *MapScaleRequest) XXX_Size() int {
	return xxx_messageInfo_MapScaleRequest.Size(m)
}
func (m *MapScaleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MapScaleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MapScaleRequest proto.InternalMessageInfo

func (m *MapScaleRequest) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

func (m *MapScaleRequest) GetImpactType() ImpactType {
	if m != nil {
		return m.ImpactType
	}
	return ImpactType_UNKNOWN_IMPACTTYPE
}

func (m *MapScaleRequest) GetEmission() Emission {
	if m != nil {
		return m.Emission
	}
	return Emission_UNKNOWN_EMISSION
}

func (m *MapScaleRequest) GetSourceType() string {
	if m != nil {
		return m.SourceType
	}
	return ""
}

func (m *MapScaleRequest) GetSimulationType() SimulationType {
	if m != nil {
		return m.SimulationType
	}
	return SimulationType_UNKNOWN_SIMULATIONTYPE
}

type MapScaleResponse struct {
	Min                  float64  `protobuf:"fixed64,1,opt,name=Min,proto3" json:"Min,omitempty"`
	Max                  float64  `protobuf:"fixed64,2,opt,name=Max,proto3" json:"Max,omitempty"`
	CutPt                float64  `protobuf:"fixed64,3,opt,name=CutPt,proto3" json:"CutPt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MapScaleResponse) Reset()         { *m = MapScaleResponse{} }
func (m *MapScaleResponse) String() string { return proto.CompactTextString(m) }
func (*MapScaleResponse) ProtoMessage()    {}
func (*MapScaleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cityaq_5d59c783e971c48c, []int{20}
}
func (m *MapScaleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MapScaleResponse.Unmarshal(m, b)
}
func (m *MapScaleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MapScaleResponse.Marshal(b, m, deterministic)
}
func (dst *MapScaleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MapScaleResponse.Merge(dst, src)
}
func (m *MapScaleResponse) XXX_Size() int {
	return xxx_messageInfo_MapScaleResponse.Size(m)
}
func (m *MapScaleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MapScaleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MapScaleResponse proto.InternalMessageInfo

func (m *MapScaleResponse) GetMin() float64 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *MapScaleResponse) GetMax() float64 {
	if m != nil {
		return m.Max
	}
	return 0
}

func (m *MapScaleResponse) GetCutPt() float64 {
	if m != nil {
		return m.CutPt
	}
	return 0
}

func init() {
	proto.RegisterType((*CitiesRequest)(nil), "cityaqrpc.CitiesRequest")
	proto.RegisterType((*CitiesResponse)(nil), "cityaqrpc.CitiesResponse")
	proto.RegisterType((*CityGeometryRequest)(nil), "cityaqrpc.CityGeometryRequest")
	proto.RegisterType((*CityGeometryResponse)(nil), "cityaqrpc.CityGeometryResponse")
	proto.RegisterType((*Polygon)(nil), "cityaqrpc.Polygon")
	proto.RegisterType((*Path)(nil), "cityaqrpc.Path")
	proto.RegisterType((*Point)(nil), "cityaqrpc.Point")
	proto.RegisterType((*GriddedEmissionsRequest)(nil), "cityaqrpc.GriddedEmissionsRequest")
	proto.RegisterType((*GriddedEmissionsResponse)(nil), "cityaqrpc.GriddedEmissionsResponse")
	proto.RegisterType((*GriddedConcentrationsRequest)(nil), "cityaqrpc.GriddedConcentrationsRequest")
	proto.RegisterType((*GriddedConcentrationsResponse)(nil), "cityaqrpc.GriddedConcentrationsResponse")
	proto.RegisterType((*GriddedPopulationRequest)(nil), "cityaqrpc.GriddedPopulationRequest")
	proto.RegisterType((*GriddedPopulationResponse)(nil), "cityaqrpc.GriddedPopulationResponse")
	proto.RegisterType((*ImpactSummaryRequest)(nil), "cityaqrpc.ImpactSummaryRequest")
	proto.RegisterType((*ImpactSummaryResponse)(nil), "cityaqrpc.ImpactSummaryResponse")
	proto.RegisterType((*EmissionsGridBoundsRequest)(nil), "cityaqrpc.EmissionsGridBoundsRequest")
	proto.RegisterType((*EmissionsGridBoundsResponse)(nil), "cityaqrpc.EmissionsGridBoundsResponse")
	proto.RegisterType((*EmissionsInventorySectorsRequest)(nil), "cityaqrpc.EmissionsInventorySectorsRequest")
	proto.RegisterType((*EmissionsInventorySectorsResponse)(nil), "cityaqrpc.EmissionsInventorySectorsResponse")
	proto.RegisterType((*MapScaleRequest)(nil), "cityaqrpc.MapScaleRequest")
	proto.RegisterType((*MapScaleResponse)(nil), "cityaqrpc.MapScaleResponse")
	proto.RegisterEnum("cityaqrpc.Emission", Emission_name, Emission_value)
	proto.RegisterEnum("cityaqrpc.ImpactType", ImpactType_name, ImpactType_value)
	proto.RegisterEnum("cityaqrpc.SimulationType", SimulationType_name, SimulationType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CityAQClient is the client API for CityAQ service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CityAQClient interface {
	// Cities returns the available cities.
	Cities(ctx context.Context, in *CitiesRequest, opts ...grpc.CallOption) (*CitiesResponse, error)
	// CityGeometry returns the boundary of the specified city.
	CityGeometry(ctx context.Context, in *CityGeometryRequest, opts ...grpc.CallOption) (*CityGeometryResponse, error)
	// GriddedEmissions returns the distribution within the city of
	// 1 kilotonne of emissions.
	GriddedEmissions(ctx context.Context, in *GriddedEmissionsRequest, opts ...grpc.CallOption) (*GriddedEmissionsResponse, error)
	// EmissionsGridBounds returns the bounds of the grid used in GriddedEmissions.
	EmissionsGridBounds(ctx context.Context, in *EmissionsGridBoundsRequest, opts ...grpc.CallOption) (*EmissionsGridBoundsResponse, error)
	// GriddedConcentrations returns the concentrations resulting from the
	// corresponding GriddedEmissions.
	GriddedConcentrations(ctx context.Context, in *GriddedConcentrationsRequest, opts ...grpc.CallOption) (*GriddedConcentrationsResponse, error)
	// MapScale returns the minimum and maximum values of the result
	// of the given request.
	MapScale(ctx context.Context, in *MapScaleRequest, opts ...grpc.CallOption) (*MapScaleResponse, error)
	// GriddedPopulation returns the population counts---gridded to the
	// concentration grid---associated with the given request.
	GriddedPopulation(ctx context.Context, in *GriddedPopulationRequest, opts ...grpc.CallOption) (*GriddedPopulationResponse, error)
	// ImpactSummary returns a summary of the impacts from the given request.
	ImpactSummary(ctx context.Context, in *ImpactSummaryRequest, opts ...grpc.CallOption) (*ImpactSummaryResponse, error)
	EmissionsInventorySectors(ctx context.Context, in *EmissionsInventorySectorsRequest, opts ...grpc.CallOption) (*EmissionsInventorySectorsResponse, error)
}

type cityAQClient struct {
	cc *grpc.ClientConn
}

func NewCityAQClient(cc *grpc.ClientConn) CityAQClient {
	return &cityAQClient{cc}
}

func (c *cityAQClient) Cities(ctx context.Context, in *CitiesRequest, opts ...grpc.CallOption) (*CitiesResponse, error) {
	out := new(CitiesResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/Cities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) CityGeometry(ctx context.Context, in *CityGeometryRequest, opts ...grpc.CallOption) (*CityGeometryResponse, error) {
	out := new(CityGeometryResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/CityGeometry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) GriddedEmissions(ctx context.Context, in *GriddedEmissionsRequest, opts ...grpc.CallOption) (*GriddedEmissionsResponse, error) {
	out := new(GriddedEmissionsResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/GriddedEmissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) EmissionsGridBounds(ctx context.Context, in *EmissionsGridBoundsRequest, opts ...grpc.CallOption) (*EmissionsGridBoundsResponse, error) {
	out := new(EmissionsGridBoundsResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/EmissionsGridBounds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) GriddedConcentrations(ctx context.Context, in *GriddedConcentrationsRequest, opts ...grpc.CallOption) (*GriddedConcentrationsResponse, error) {
	out := new(GriddedConcentrationsResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/GriddedConcentrations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) MapScale(ctx context.Context, in *MapScaleRequest, opts ...grpc.CallOption) (*MapScaleResponse, error) {
	out := new(MapScaleResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/MapScale", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) GriddedPopulation(ctx context.Context, in *GriddedPopulationRequest, opts ...grpc.CallOption) (*GriddedPopulationResponse, error) {
	out := new(GriddedPopulationResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/GriddedPopulation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) ImpactSummary(ctx context.Context, in *ImpactSummaryRequest, opts ...grpc.CallOption) (*ImpactSummaryResponse, error) {
	out := new(ImpactSummaryResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/ImpactSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityAQClient) EmissionsInventorySectors(ctx context.Context, in *EmissionsInventorySectorsRequest, opts ...grpc.CallOption) (*EmissionsInventorySectorsResponse, error) {
	out := new(EmissionsInventorySectorsResponse)
	err := c.cc.Invoke(ctx, "/cityaqrpc.CityAQ/EmissionsInventorySectors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CityAQServer is the server API for CityAQ service.
type CityAQServer interface {
	// Cities returns the available cities.
	Cities(context.Context, *CitiesRequest) (*CitiesResponse, error)
	// CityGeometry returns the boundary of the specified city.
	CityGeometry(context.Context, *CityGeometryRequest) (*CityGeometryResponse, error)
	// GriddedEmissions returns the distribution within the city of
	// 1 kilotonne of emissions.
	GriddedEmissions(context.Context, *GriddedEmissionsRequest) (*GriddedEmissionsResponse, error)
	// EmissionsGridBounds returns the bounds of the grid used in GriddedEmissions.
	EmissionsGridBounds(context.Context, *EmissionsGridBoundsRequest) (*EmissionsGridBoundsResponse, error)
	// GriddedConcentrations returns the concentrations resulting from the
	// corresponding GriddedEmissions.
	GriddedConcentrations(context.Context, *GriddedConcentrationsRequest) (*GriddedConcentrationsResponse, error)
	// MapScale returns the minimum and maximum values of the result
	// of the given request.
	MapScale(context.Context, *MapScaleRequest) (*MapScaleResponse, error)
	// GriddedPopulation returns the population counts---gridded to the
	// concentration grid---associated with the given request.
	GriddedPopulation(context.Context, *GriddedPopulationRequest) (*GriddedPopulationResponse, error)
	// ImpactSummary returns a summary of the impacts from the given request.
	ImpactSummary(context.Context, *ImpactSummaryRequest) (*ImpactSummaryResponse, error)
	EmissionsInventorySectors(context.Context, *EmissionsInventorySectorsRequest) (*EmissionsInventorySectorsResponse, error)
}

func RegisterCityAQServer(s *grpc.Server, srv CityAQServer) {
	s.RegisterService(&_CityAQ_serviceDesc, srv)
}

func _CityAQ_Cities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).Cities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/Cities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).Cities(ctx, req.(*CitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_CityGeometry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CityGeometryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).CityGeometry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/CityGeometry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).CityGeometry(ctx, req.(*CityGeometryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_GriddedEmissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GriddedEmissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).GriddedEmissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/GriddedEmissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).GriddedEmissions(ctx, req.(*GriddedEmissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_EmissionsGridBounds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmissionsGridBoundsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).EmissionsGridBounds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/EmissionsGridBounds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).EmissionsGridBounds(ctx, req.(*EmissionsGridBoundsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_GriddedConcentrations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GriddedConcentrationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).GriddedConcentrations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/GriddedConcentrations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).GriddedConcentrations(ctx, req.(*GriddedConcentrationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_MapScale_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MapScaleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).MapScale(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/MapScale",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).MapScale(ctx, req.(*MapScaleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_GriddedPopulation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GriddedPopulationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).GriddedPopulation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/GriddedPopulation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).GriddedPopulation(ctx, req.(*GriddedPopulationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_ImpactSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImpactSummaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).ImpactSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/ImpactSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).ImpactSummary(ctx, req.(*ImpactSummaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CityAQ_EmissionsInventorySectors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmissionsInventorySectorsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CityAQServer).EmissionsInventorySectors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cityaqrpc.CityAQ/EmissionsInventorySectors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CityAQServer).EmissionsInventorySectors(ctx, req.(*EmissionsInventorySectorsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CityAQ_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cityaqrpc.CityAQ",
	HandlerType: (*CityAQServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Cities",
			Handler:    _CityAQ_Cities_Handler,
		},
		{
			MethodName: "CityGeometry",
			Handler:    _CityAQ_CityGeometry_Handler,
		},
		{
			MethodName: "GriddedEmissions",
			Handler:    _CityAQ_GriddedEmissions_Handler,
		},
		{
			MethodName: "EmissionsGridBounds",
			Handler:    _CityAQ_EmissionsGridBounds_Handler,
		},
		{
			MethodName: "GriddedConcentrations",
			Handler:    _CityAQ_GriddedConcentrations_Handler,
		},
		{
			MethodName: "MapScale",
			Handler:    _CityAQ_MapScale_Handler,
		},
		{
			MethodName: "GriddedPopulation",
			Handler:    _CityAQ_GriddedPopulation_Handler,
		},
		{
			MethodName: "ImpactSummary",
			Handler:    _CityAQ_ImpactSummary_Handler,
		},
		{
			MethodName: "EmissionsInventorySectors",
			Handler:    _CityAQ_EmissionsInventorySectors_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cityaq.proto",
}

func init() { proto.RegisterFile("cityaq.proto", fileDescriptor_cityaq_5d59c783e971c48c) }

var fileDescriptor_cityaq_5d59c783e971c48c = []byte{
	// 977 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x57, 0xdd, 0x73, 0xdb, 0x44,
	0x10, 0xcf, 0xf9, 0x2b, 0xf1, 0x36, 0x1f, 0xc7, 0xe6, 0x03, 0x45, 0x2d, 0xa9, 0xb9, 0x7e, 0xe0,
	0x09, 0x4c, 0x28, 0xee, 0xf4, 0x91, 0x61, 0x52, 0x8f, 0x13, 0x3c, 0xd4, 0x1f, 0x95, 0x5c, 0x48,
	0x98, 0x61, 0x8a, 0x70, 0x44, 0xa3, 0xc1, 0x96, 0x5c, 0xe9, 0x0c, 0xf6, 0x3f, 0xc8, 0x0c, 0x7d,
	0xe0, 0x1f, 0xe0, 0x1f, 0xe1, 0x91, 0xd1, 0xe9, 0x74, 0x96, 0x6c, 0x39, 0x4d, 0x33, 0x3c, 0xb4,
	0x6f, 0xb7, 0xbb, 0xbf, 0xdd, 0xbd, 0xfb, 0xed, 0x69, 0x6f, 0x05, 0xeb, 0x7d, 0x87, 0x4f, 0xad,
	0xd7, 0x47, 0x23, 0xdf, 0xe3, 0x1e, 0x96, 0x23, 0xc9, 0x1f, 0xf5, 0xd9, 0x16, 0x6c, 0xd4, 0x1d,
	0xee, 0xd8, 0x81, 0x61, 0xbf, 0x1e, 0xdb, 0x01, 0x67, 0x0f, 0x61, 0x33, 0x56, 0x04, 0x23, 0xcf,
	0x0d, 0x6c, 0xdc, 0x81, 0x62, 0xdb, 0x1a, 0xda, 0x81, 0x46, 0x2a, 0xf9, 0x6a, 0xd9, 0x88, 0x04,
	0xf6, 0x15, 0x6c, 0xd7, 0x1d, 0x3e, 0x3d, 0xb5, 0xbd, 0xa1, 0xcd, 0xfd, 0xa9, 0x74, 0x47, 0x1d,
	0xd6, 0x42, 0x75, 0x88, 0xd1, 0x48, 0x85, 0x54, 0xcb, 0x86, 0x92, 0xd9, 0x09, 0xec, 0xa4, 0x5d,
	0x64, 0x82, 0x23, 0x58, 0xeb, 0x7a, 0x83, 0xe9, 0x2b, 0xcf, 0x8d, 0x72, 0xdc, 0xaa, 0xe1, 0x91,
	0xda, 0xe1, 0x91, 0x34, 0x19, 0x0a, 0xc3, 0x1e, 0xc1, 0xaa, 0x5c, 0xe3, 0x03, 0x28, 0x76, 0x2d,
	0x7e, 0x19, 0xfb, 0x6d, 0x25, 0xfd, 0x2c, 0x7e, 0x69, 0x44, 0x56, 0xf6, 0x08, 0x0a, 0xe1, 0x02,
	0xab, 0x50, 0xea, 0x7a, 0x8e, 0xcb, 0x63, 0x3c, 0x4d, 0xe5, 0x71, 0x5c, 0x6e, 0x48, 0x3b, 0xbb,
	0x07, 0x45, 0xb1, 0xc2, 0x75, 0x20, 0x67, 0xe2, 0x24, 0xc4, 0x20, 0x67, 0xa1, 0x74, 0xae, 0xe5,
	0x22, 0xe9, 0x9c, 0xfd, 0x45, 0xe0, 0xe3, 0x53, 0xdf, 0xb9, 0xb8, 0xb0, 0x2f, 0x1a, 0x43, 0x27,
	0x08, 0x1c, 0xcf, 0x0d, 0xae, 0x41, 0x04, 0x1e, 0x00, 0x98, 0xde, 0xd8, 0xef, 0xdb, 0xbd, 0xe9,
	0xc8, 0x16, 0xe1, 0xca, 0x46, 0x42, 0x83, 0x5f, 0xc2, 0x5a, 0x1c, 0x4f, 0xcb, 0x57, 0x48, 0x75,
	0xb3, 0xb6, 0x9d, 0xd8, 0x68, 0x6c, 0x32, 0x14, 0x08, 0x8f, 0x61, 0xd3, 0x74, 0x86, 0xe3, 0x81,
	0xc5, 0x1d, 0xcf, 0x15, 0x41, 0x0b, 0xc2, 0x6d, 0x3f, 0xe1, 0x96, 0x06, 0x18, 0x73, 0x0e, 0xec,
	0x12, 0xb4, 0xc5, 0xa3, 0xdc, 0xac, 0x40, 0x78, 0x07, 0xca, 0x2a, 0x88, 0x96, 0xab, 0xe4, 0xab,
	0xc4, 0x98, 0x29, 0xd8, 0xdf, 0x04, 0xee, 0xc8, 0x54, 0x75, 0xcf, 0xed, 0xdb, 0x2e, 0xf7, 0xc5,
	0x36, 0x3e, 0x58, 0xea, 0xfe, 0x80, 0x4f, 0x96, 0x9c, 0xe7, 0x86, 0xfc, 0x85, 0xdf, 0x60, 0x2a,
	0x92, 0x24, 0x71, 0x4e, 0xcb, 0xde, 0x10, 0x55, 0xb4, 0xae, 0x37, 0x92, 0x5b, 0xfa, 0x50, 0x59,
	0xfc, 0x0d, 0xf6, 0x33, 0xce, 0x72, 0x43, 0x06, 0x0f, 0x00, 0x66, 0x51, 0x24, 0x7b, 0x09, 0x0d,
	0xfb, 0x93, 0xc0, 0x4e, 0x73, 0x38, 0xb2, 0xfa, 0xdc, 0x1c, 0x0f, 0x87, 0xd6, 0xb5, 0xfa, 0xd7,
	0x7b, 0xc9, 0xda, 0x3f, 0x04, 0x76, 0xe7, 0x0e, 0x22, 0x29, 0x4b, 0x53, 0x10, 0x75, 0xb0, 0x84,
	0x06, 0xa3, 0x46, 0x3f, 0x4d, 0xd1, 0x44, 0xc4, 0x25, 0x4b, 0x69, 0x91, 0xc1, 0x7a, 0xa8, 0x69,
	0x4c, 0x46, 0x5e, 0x30, 0xf6, 0x6d, 0x71, 0x32, 0x62, 0xa4, 0x74, 0x78, 0x1f, 0x36, 0x7a, 0x1e,
	0xb7, 0x06, 0x0a, 0x54, 0x10, 0xa0, 0xb4, 0x12, 0xf7, 0xa0, 0x14, 0x7a, 0x35, 0x4f, 0xb4, 0xa2,
	0x30, 0x4b, 0x09, 0x35, 0x58, 0x15, 0xc0, 0xe6, 0x89, 0x56, 0x12, 0x86, 0x58, 0x64, 0x67, 0xa0,
	0xab, 0xbe, 0x11, 0x5e, 0x8e, 0xa7, 0xde, 0xd8, 0xbd, 0xf8, 0x3f, 0xfa, 0x04, 0xb3, 0xe1, 0x76,
	0x66, 0x64, 0x49, 0x1e, 0x83, 0x7c, 0xcb, 0x89, 0x58, 0xcb, 0x7a, 0x25, 0x42, 0xa3, 0xc0, 0x58,
	0x13, 0x11, 0x3b, 0x1b, 0x63, 0x4d, 0x18, 0x83, 0x8a, 0x4a, 0xd3, 0x74, 0x7f, 0xb7, 0x5d, 0xee,
	0xf9, 0x53, 0xd3, 0xee, 0x73, 0xcf, 0x57, 0x2f, 0xee, 0xd7, 0xf0, 0xe9, 0x15, 0x18, 0xb9, 0x21,
	0x0d, 0x56, 0xa5, 0x4a, 0x3e, 0xc3, 0xb1, 0xc8, 0xfe, 0x25, 0xb0, 0xd5, 0xb2, 0x46, 0x66, 0xdf,
	0x1a, 0xd8, 0xd7, 0x61, 0xe6, 0x09, 0x40, 0x74, 0x61, 0x14, 0x33, 0x9b, 0xb5, 0xdd, 0xc4, 0xee,
	0x67, 0x46, 0x23, 0x01, 0x7c, 0xf7, 0xcb, 0x9d, 0xae, 0x40, 0x61, 0xe1, 0x6b, 0x59, 0xbc, 0xfc,
	0xc5, 0x77, 0xbd, 0xfc, 0xcf, 0x80, 0xce, 0x4e, 0x2e, 0x89, 0xa2, 0xb3, 0xca, 0x91, 0xa8, 0x4e,
	0x74, 0x56, 0x27, 0x22, 0xaa, 0x12, 0x4e, 0x34, 0xf5, 0x31, 0xef, 0x72, 0x79, 0x97, 0x23, 0xe1,
	0xb0, 0x33, 0x3b, 0x21, 0xee, 0x00, 0x7d, 0xd1, 0xfe, 0xae, 0xdd, 0xf9, 0xa1, 0xfd, 0xb2, 0xd1,
	0x6a, 0x9a, 0x66, 0xb3, 0xd3, 0xa6, 0x2b, 0x58, 0x86, 0x62, 0xb7, 0x55, 0x7b, 0xf9, 0x84, 0x12,
	0x5c, 0x85, 0x7c, 0xfb, 0xdb, 0xc7, 0x34, 0x27, 0x16, 0x9d, 0x09, 0xcd, 0x87, 0x0b, 0xb3, 0x33,
	0xa1, 0x85, 0x70, 0xf1, 0x7d, 0xa7, 0x4e, 0x8b, 0x87, 0xa7, 0x49, 0xa6, 0x71, 0x0f, 0x30, 0x0e,
	0xd9, 0x6c, 0x75, 0x8f, 0xeb, 0xbd, 0xde, 0x79, 0xb7, 0x41, 0x57, 0x70, 0x23, 0xf1, 0x58, 0x52,
	0x82, 0x38, 0xdf, 0xfb, 0x69, 0xee, 0xf0, 0x6c, 0x9e, 0x2a, 0xd4, 0x61, 0x2f, 0x0e, 0x66, 0x36,
	0x5b, 0x2f, 0x9e, 0x1d, 0xf7, 0x9a, 0x9d, 0xb6, 0x0c, 0x58, 0x86, 0xa2, 0xf8, 0x7e, 0x28, 0x09,
	0x63, 0x87, 0x75, 0x8f, 0xc4, 0x1c, 0xd2, 0xe8, 0x53, 0x6e, 0x59, 0xfe, 0x2b, 0xc7, 0xb5, 0x06,
	0x34, 0x5f, 0x7b, 0x53, 0x8a, 0xbe, 0xc9, 0xe3, 0xe7, 0xf8, 0x8d, 0x58, 0x39, 0x76, 0x80, 0x5a,
	0xa2, 0x02, 0xa9, 0xe1, 0x50, 0xdf, 0xcf, 0xb0, 0x44, 0xbc, 0xb3, 0x15, 0x7c, 0x1e, 0x45, 0x8f,
	0xc7, 0x3b, 0x3c, 0x48, 0x83, 0xe7, 0x47, 0x45, 0xfd, 0xee, 0x52, 0xbb, 0x0a, 0xf9, 0x13, 0xd0,
	0xf9, 0xa1, 0x04, 0x59, 0xc2, 0x6d, 0xc9, 0xf0, 0xa5, 0xdf, 0xbb, 0x12, 0xa3, 0xc2, 0xff, 0x0a,
	0xdb, 0x19, 0x4d, 0x00, 0x1f, 0x64, 0x5c, 0xec, 0xc5, 0xf6, 0xa3, 0x3f, 0x7c, 0x1b, 0x4c, 0xe5,
	0x19, 0xc0, 0x6e, 0xe6, 0x80, 0x80, 0x9f, 0x2d, 0xee, 0x33, 0x73, 0x24, 0xd2, 0xab, 0x6f, 0x07,
	0xaa, 0x6c, 0x0d, 0x58, 0x8b, 0xbf, 0x0a, 0xd4, 0x13, 0x7e, 0x73, 0x4d, 0x42, 0xbf, 0x9d, 0x69,
	0x53, 0x61, 0x7e, 0x86, 0x8f, 0x16, 0xde, 0x63, 0xcc, 0x20, 0x76, 0x61, 0xf2, 0xd0, 0xef, 0x5f,
	0x0d, 0x52, 0x19, 0x7a, 0xb0, 0x91, 0x7a, 0xba, 0xf0, 0xee, 0x42, 0x1b, 0x4a, 0xbf, 0xce, 0x7a,
	0x65, 0x39, 0x40, 0x45, 0x9d, 0xc0, 0xfe, 0xd2, 0x76, 0x8a, 0x9f, 0x67, 0xd5, 0x6c, 0x49, 0x63,
	0xd6, 0xbf, 0xb8, 0x1e, 0x38, 0xce, 0xfc, 0xf4, 0xd6, 0x8f, 0xb3, 0x1f, 0xab, 0x5f, 0x4a, 0xe2,
	0x57, 0xeb, 0xf1, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x34, 0xeb, 0x17, 0xd9, 0x7a, 0x0d, 0x00,
	0x00,
}
